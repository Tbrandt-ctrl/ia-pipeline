SUMMARY Proficient in all phases of the software development life - cycle with specific focus on the build and release of quality software. Experienced in Waterfall, Agile/Scrum, Lean and most recently Continuous Integration and Continuous Deployment practices. Experience on AWS cloud services like EC2, S3, RDS, ELB, EBS, VPC, Route53, Auto scaling groups, CloudWatch, CloudFront, IAM for installing configuring and troubleshooting on various Amazon Images. Experience in an environment of Amazon Web Services (AWS) products, gained good knowledge in Elastic Cloud Computing, Simple Storage Services, Cloud Formation, Glacier, Block Storage, Elastic Beanstalk, Amazon Lambda, Virtual Private cloud, Load balancing, Relational Database Service, and Cloud Watch. Worked on all cloud Platforms such as Google Cloud Platform (GCP), Amazon Web Services (AWS), Azure, Pivotal Cloud Foundry (PCF) and Implemented a Continuous Delivery framework using Jenkins, Ansible, GIT, SVN, Docker, Kubernetes, Maven and Nexus in Linux environments along with the installation, configuration and maintenance of Pivotal Cloud Foundry (PCF) on AWS. Experience in AWS image management module (for creating, registering, listing and deleting images), optimizing volumes using APIs exposed by AWS. Good Knowledge in Azure cloud services, Azure storage, Azure active directory and Azure Service Bus. Managing Client's Microsoft Azure based PaaS and IAAS environment. Best practice in managing Azure infrastructure, Azure storage accounts and deploying workloads on Azure virtual machines (VMs), open virtual networks, cloud services, resource groups, express route, traffic manager, VPN, load balancing, application gateways, auto-scaling and cloud services (PaaS role instances) into secure V-Nets and subnets. Expertise in Google Cloud Platform (GCP) Services Like Compute Engine, Cloud Functions, CloudDNS, Cloud Storage and Cloud Deployment Manager and SaaS, PaaS and IaaS concepts of Cloud computing architecture and Implementation using GCP. Implemented multi-tier application provisioning in open stack cloud, integrating it with PUPPET, migrating the application using MAVEN as build tool. Hands on experience on Terraform as a tool for building, changing, and versioning infrastructure safely and efficiently. Used Terraform as infrastructure as code, execution plans, resource graph and change automation. Written Templates for AWS infrastructure as a code using Terraform to build staging and production environments. Experienced in using Jenkins pipeline to drive all microservice builds out to the docker registry and then deployed to Kubernetes, created pods and managed using Kubernetes. Dockerized applications by creating Docker images from Docker file Worked on deployment automation of all the Microservices to pull image from the private docker registry and deploy to docker swarm cluster using Chef. Worked on Docker container snapshots, attaching to a running container, removing images, managing directory structures and managing containers. Experience writing Ansible and running Playbooks using YAML code to automate the deployment process and to integrating Ansible Playbook into Jenkins jobs for a continuous delivery framework. Experienced in Installing, Configured and management in Ansible Centralized Server and creating the playbooks to support various middleware application servers, and involved in configuring the Ansible tower as a configuration management tool to automate repetitive tasks. Worked on Managing the Cloud Environment using Ansible. Configuration of Ansible nodes and writing YAML playbooks for deployment and executing tasks on nodes. Implemented multi-tier application provisioning in open stack cloud, integrating it with PUPPET, migrating the application using MAVEN as build tool. Experience in using build tools like MAVEN and ANT for the building of deployable artifacts such as war, jar and ear from source code. Involved in migrating the application from ANT to MAVEN by analyzing the dependencies and creating the POMâ€™s files to implement the build process using Maven. Experienced in authoring pom.xml files, performing releases with the Maven release plugin, Mavenization of Java projects and managing Maven repositories. Used Nagios as a monitoring tool to identify and resolve infrastructure problems before they affect critical processes and worked on Nagios Event handlers in case of automatic restart of failed applications and services. User, Group creation, monitoring and maintaining logs for system status/health using Linux commands and Splunk system monitor. Writing new plugins in Splunk to monitor. Evangelism of best practice and programming/scripting skills using tools like shell scripting Python and Ruby with great communication and cross-functional skills and the ability to execute automatically given a set of clearly defined strategies. Experience working in SQL database like MySQL, Oracle 10i/9i/8i, SQL Server and NoSQL database like MongoDB, DynamoDB and Cassandra. Experience in using various scripting languages like Bash, Perl, Shell, Ruby & Python and utilizing Python scripts for pushing data from Mongo DB to MySQL Database. Installation, configuration and administration of Red Hat Linux servers and support for Servers. Provided 24x7 System Administration support for 300+ Red Hat Linux 3.x, 4.x servers and resolved trouble tickets on shift rotation basis. Have good understanding and strong skills in writing the Bash/Shell scripts, languages and Python on different platforms like Windows and Linux using design patterns. PROFESSIONAL EXPERIENCE Sr. DevOps/Cloud Engineer Confidential, VA Responsibilities: Expertise on planning, developing and assisting the migration of client's on-premise infrastructure to Amazon Web Service (AWS) and Google Cloud (GCP). Design and implementation on premise and cloud migration and manage strategy for the new hybrid cloud solution in single and multiple site data centers. Configuring and deploying instances on GCP environments and Datacenters, also familiar with Compute, Kubernetes Engine, Stackdriver Monitoring, Elastic Search and managing security groups on both. Developed entire AWS infrastructure and hybrid cloud solutions to build secure, highly scalable and flexible systems that handled expected and unexpected load bursts and can quickly evolve during development iterations. Responsible for Multiple AWS instances, set the security groups, Elastic Load Balancer and AMIs, Auto scaling to design cost effective, fault tolerant and highly available systems. Experienced in designing and implementing scalable cloud-based web applications using AWS and GCP. Implemented Micro-services using Pivotal Cloud Foundry platform build upon Spring Boot Services and created workflows on TeamCity for setting up automated pipelines for CI/CD with PCF. Hands on experience on using Terraform along with packer to create custom machine images and automation tools like Chef/Ansible to install software's after the infrastructure is provisioned. Involved in working with Terraform to bring up a count of 'container instances' or 'nodes' in an AWS ECS cluster with different instances running on each one. Hands on experience with bootstrapping instances with Chef and integrating with Autoscaling and creating, maintaining Chef Recipes and cookbooks to simplify and expedite deployment of applications. Involved in Chef cookbooks as a configuration management tool and repaired broken Chef recipes and troubleshooted the configuration problems with other chef objects. Configured Ansible control machine and wrote Ansible playbooks with Ansible roles. Used file module in Ansible playbook to copy and remove files on EC2 instances. Experienced in writing Chef Cookbooks and Recipes to automate our build/deployment process and do an overall process improvement to any manual processes and managed servers on AWS cloud platform using chef configuration management tools and Server automation with Chef and used tools like Maven for deployment and build management. Worked with Docker and Kubernetes on multiple cloud providers, from helping developers build and containerize their application (CI/CD) to deploying either on public or private cloud. Created, managed and performed container-based deployments using Docker images containing Middleware and Applications together and Evaluated Kubernetes for Docker container orchestration. Utilized Kubernetes and Docker for the runtime environment for the Continuous Integration/Continuous Deployment system to build, test, and deploy. Created Jenkins jobs to deploy applications to Kubernetes Cluster. Worked on creating the Docker containers, Docker images, tagging and pushing the images and Docker consoles for managing the application life cycle and Deployed Docker Engines in Virtualized Platforms for containerization of multiple applications. Developed procedures to unify streamline and automate applications development and deployment procedures with Linux container technology using Docker swarm. Experience creating pods and clusters in Kubernetes and deploy those using Openshift. Good understanding of Open shift platform in managing Docker containers and Kubernetes Clusters. Integrated GIT into Jenkins to automate the code check-out process used Jenkins for automating Builds and Automating Deployments. Excellent hands on Experience in several areas of Jenkins like master/slave administrations, access controls, report generations, parameterized/triggered build setups etc. Extensively worked on configuration Management using Chef Cookbooks and source code repository management using tools such as; GIT, Subversion (SVN). Responsible for Installing and administer Nexus repository to deploy the artifacts generated by Maven and Ant to store the dependent jars which were used during the build. Tested Splunk search strings & operational strings and used it as resource monitoring tool. Worked with administrators to ensure Splunk is actively and accurately running and monitoring on the current infrastructure implementation. Excellent hands on experience working with monitoring tools such as Nagios, Splunk, ELK and working with load balancing, Integrating and monitoring with Nagios and Splunk also checking the health of applications. Developed PowerShell script to fetch necessary information from webpages according to the requirement and to automate routine tasks when applicable. Troubleshoot and resolved bugs in .NET applications to ensure optimal development environment while working in Azure Platform. Experience working in SQL database like MySQL, Oracle 10i/9i/8i, SQL Server and NoSQL database like MongoDB, DynamoDB and Cassandra, Maria DB. Expertise in administering and automating operations across multiple platforms (UNIX, Linux, Centos, Ubuntu, Windows and MAC. Expertise in administering and automating operations across multiple platforms and Windows servers, Performed numerous server migrations on both Linux/Unix. Migrations include moving all clients and their data, configuration settings, testing and verifying everything is correct with zero downtime. Environment: AWS, GCP, Jenkins, Kubernetes, Terraform, Docker, Ansible, Chef, Maven, Python/Shell/Perl/Ruby/PHP Scripts, Linux, ELK, Bitbucket, Splunk, Cloud Formation, VMware, Tomcat Apache, JIRA, web &application servers, Networking. DevOps Cloud Engineer Confidential, Columbus, OH Responsibilities: Proficient in AZURE, Migration of all servers from on-premises to Kubernetes containers & writing the scripts in Perl and Shell Scripts for managing various enterprise applications. Performed the automation deployments using AWS by creating the IAM roles and policies and used the code pipeline plugin to integrate Jenkins with AWS and created the EC2 instances to provide the virtual servers. Expertise in architecting secure VPC solutions in AWS with the help of Network ACLs, Subnets, security groups, public and private network configurations. Deployed micro-services, including provisioning AWS environments using Ansible Playbooks. Configuring and Networking of Virtual Private Cloud (VPC) Written Cloud formation templates and deployed AWS resources using it. Expertise in Azure Development, and worked on Azure web application, App services, Azure storage, Azure SQL Database, Virtual Machines, Fabric controller, Azure AD, Azure search, and Notification hub. Worked on various Azure services like Compute (Web Roles, Worker Roles), Azure Websites, Caching, SQL Azure, NoSQL, Storage, Network services, Azure Active Directory, API Management, Scheduling, Auto Scaling and PowerShell. Experience in Automating, Configuring and Deploying Instances on Azure environments and in Data centers and migrating on premise to Windows Azure using Azure Site Recovery and Azure backups. Mastered in using Open Stack which includes Nova, Neutron, Cinder, Glance, Swift, Trove, Designate, Keystone, Heat, and Ceilometer. Worked with Terraform for automating VPCs, ELBs, security groups, SQS queues, S3 buckets, and continuing to replace the rest of our infrastructure. Orchestrated and migrated CI/CD processes using Cloud Formation and Terraform Templates and Containerized the infrastructure using Docker, which was setup in Vagrant, AWS and VPCs. Implemented Terraform modules for deployment of applications across multiple cloud providers like AWS, Azure and OpenStack. Integrated Docker container orchestration framework using Kubernetes by creating pods, config Maps, deployments. Created develop and test environments of different applications by provisioning Kubernetes clusters on AWS using Docker, Ansible, and Terraform. And implemented Jenkins pipeline for deployment using Ansible. Created Ansible roles in YAML and defined tasks, variables, files, handlers and templates. configured the Ansible files for parallel deployment in Ansible for automating the Continuous delivery process and used Ansible for configuring and managing multi-node configuration management over SSH and PowerShell. Experience writing Playbooks using Ansible to provision several pre-production environments and several proprietary middleware installations. Experience using Ansible Tower dashboard, role base access control, access to Ansible for deployments and worked with Ansible Playbooks to automate various deployment tasks and working knowledge on Ansible Roles, Ansible inventory files and Ansible Galaxy. Developed procedures to unify, streamline and automate application development and deployment procedures with Linux Container technology using Docker. Good understanding of Open shift platform in managing Docker containers and Kubernetes Clusters. Used Docker and Open Shift to manage micro services for development and testing. Considerably worked on Jenkins for continuous integration and for end-to-end automation for all build and deployments. Performed Integrated delivery (CI and CD process) Using Jenkins, Nexus, Yum. Branching, Tagging, Release Activities on Version Control Tools: SVN, GitHub. Creation and editing of Teamcity project and build configurations. Creating repositories, branches, tags in GIT and assist the developers to fix merging issues and Creating Local, Virtual Repositories in Artifactory for the project and release builds, repository management in Maven to share snapshots and releases of internal projects using JFrog Artifactory tool. Responsible for log monitoring, auditing and enforcement of policies using New Relic Monitoring AWS Instances regularly using ops view and New Relic tools. Configuring and managing ELK stack, setup the elastic search ELK Stack to collect search and analyze log files from across the servers and integration of Application with monitoring tool New Relic for complete insight and proactive monitoring. Created Python scripts to totally automate AWS services which includes web servers, ELB, CloudFront distribution, database, EC2 and database security groups, S3 bucket and application configuration, this script creates stacks, single servers, or joins web servers to stacks. Artifacts generated by Jenkins & configured jobs with the Maven for various deployments of Managed JAVA/J2EE and .Net enterprise applications in agile environment, automated solutions using Python & managed artifacts in Nexus repository. Worked on build deployment, build scripts and automated solutions using scripting languages such as Python and developed monitoring and notification tools too. Scripted Linux repository database comparisons using Python, able to create scripts for system administration and AWS using Python. Experience in administering and maintaining Linux servers in production environments. Supported in the installation of packages/patches on Linux platforms. Implemented Backup & Disaster recovery management on Linux platforms. Performed kickstart to automate installation process for fifteen RHEL and CentOS server units and wrote bash shell script to create multiple accounts at once and a script to configure samba server on Linux for file sharing. Worked with Ansible Playbooks for zero-downtime installation, upgrade, downgrade, and uninstall processes (MongoDB,Redis, and MySQL). Deployed various databased and applications using Kubernetes cluster management some of the services areRedis, Nginx etc. Worked with Ansible Playbooks for zero-downtime installation, upgrade, downgrade, and uninstall processes (MongoDB,Redis, and MySQL). Worked on Database like Cassandra, Hadoop,Redis, Riak, Spark, PostgreSQL, MySQL. Environment: AWS, Azure, Open Stack, Terraform, Chef, Ansible, Docker, Kubernetes, Jenkins, Git, Maven, New Relic,Redis, Python Scripts, Redis, Kickstart, PostgreSQL/MYSQL, Java/J2EE. DevOps Engineer Confidential, VA Responsibilities: Expertise on Writing Templates for AWS infrastructure as code using Terraform to build staging and production environments and for deploying into AWS used automation pipeline tools like Jenkins, Artifactory, Chef and Terraform. Configured Active Directory accounts to single sign-on to AWS Management Console. Worked with security groups for EC2 instances along with ELB and Roles for Amazon services to interact with each other. Migrated MySQL, ORACLE databases from on-premises to AWS, Created snapshots and Amazon Machine Images of EC2 Instances as a part of backups. Configured AWS ELB for providing High-Availability to applications across multiple availability zones by performing periodic health checks. Experience in Working on Chef with Knife commands to manage Nodes, Cookbooks, Chef Recipes, Chef attributes, Chef Templates and Ohai. Extensively used Ruby scripting on Chef Automation for creating cookbooks comprising all resources, Database, templates, attributes. Written multiple cookbooks in Chef using Ruby scripting language for various DB configurations to modularize and optimize end-product configuration, converting production support scripts to Chef Recipes. Automated installing the Linux packages and administering Linux service using Ansible and automating product installation configuration. Implemented and designed AWS virtual servers by Ansible roles to ensure deployment of web applications. Experienced in Ansible Tower, which provides an easy-to-use dashboard and role-based access control and in developing Ansible playbooks for managing the application/OS configuration files in GIT hub, integrating with Jenkins, and Verifying with Jenkins plugins, deploying the application in Linux environment. Worked with Ansible for Orchestration of Deployments for various servers and managed Ansible Playbooks with Ansible modules, implemented CD automation using Ansible, also involved in managing existing Tomcat Webservers and automated the configuration of new servers. Administration of Bamboo Implemented a Continuous delivery framework using bamboo chef, Maven in Linux Environment. Experienced in migrate project from Bamboo to Jenkins. Extensively worked on Jenkins/Hudson, Bamboo and TeamCity for Continuous Integration and strong experience with integration of Ant and Maven Build as build tools for the building of deployable artifacts (jar, war & ear) from source code. Used Atlassian tools JIRA, Confluence, Bitbucket, Bamboo for defect management, team collaboration, source code management and continuous integration and deployment practices. Built end to end CI/CD Pipelines in Jenkins to retrieve code, compile applications, perform tests and push build artifacts to Bit Bucket. Configured GIT with Jenkins and schedule jobs using Poll SCM option. Developed scripts to pull and push data from Bitbucket. Worked on MAVEN as a build tools on java projects for the development of build artifacts on the source code and Maintained build related scripts developed in shell for Maven builds, Created and modified build configuration files including POM.xml. Installed Jenkins/Plugins for GIT Repository, Setup SCM Polling for Immediate Build with Maven and Maven Repository (Nexus, Artifactory) and Deployed Apps using custom ruby modules through Puppet as a CI/CD Process. Experience with design, configuration and implementation of Nagios and monitored run scripts remotely via Nagios Remote Plugin Executor. Deployed Nagios to monitor approximately 300 Linux systems. Wrote numerous custom plugins to monitor specific application parameters as requested by the team leads. This solution was a tool for migration and application deployment. The Nagios checks were geared toward confirming configuration items, software dependencies, and client requirements on application server pods. Developed automation scripting in Python as core using Puppet to deploy and manage Java applications across Windows servers and uses the Nagios for the windows performance monitoring. Application and System logs using Python and PowerShell for all applications to proactively monitor and trace errors with automated email alerts to various teams. Installed WebSphere products using shell scripts. Expertise working on java scripts for Templates and Node.js applications and writing many Cron-jobs using shell-script, Python and Perl for automation. Conduct systems design, feasibility and cost studies and recommend cost-effective cloud solutions such as Amazon Web Services (AWS). Ability in development and execution of XML, Shell Scripts and Perl Scripts. Experienced in creating automation and deployment templates for Relational and NoSQL databases (Standalone and RDS), including MySQL and MongoDB. Created Python scripts to totally automate AWS services, which includes web servers, ELB, Cloud Front distribution, database, EC2 and database security groups, S3 bucket and application configuration, this script creates stacks, single servers, or joins web servers to stacks. Implemented the JumpStart in Solaris servers and Kickstart in Linux Servers to automate the server builds for multiple profiles. Configured, and automated the deployment of Linux and VMware infrastructure through existing Kickstart/Jumpstart infrastructure. Environment: Puppet, Docker, GIT, Bamboo, AWS, ANT, Maven, JIRA, Python, PowerShell, Bitbucket, Nagios, Web & application servers, Networking, Linux Site & Reliability Engineer Confidential, NJ Responsibilities: Worked closely with the Development Team in the design phase and developed use case diagrams using Rational Rose. Worked with the Architects on SDLC process being the owner of post development environments. Worked on Docker hub, creating Docker images and handling multiple images primarily for middleware installations and domain configurations. Configured the Docker containers and creating Docker files for various applications as well as created Docker images using a Docker file, worked on Docker container snapshots, removing images and managing Docker volumes. Used Ansible for automating the continuous deployment and wrote playbooks using YAML scripting and for VM provisioning Worked on Ansible to configure the servers, deploy software, and orchestrate continuous deployments for zero downtime rolling updates. Created and managed Docker images from Docker Hub and handled multiple images for middleware installations and domain configurations. Created Ansible playbook files for windows server builds, configuration, and application installation. Used various plugins to extend the base functionality of Jenkins to deploy, integrate tests and display reports and maintain and track inventory using Jenkins and set alerts when the servers are full and need attention. Installed and configured the Jenkins, Jenkins plugins, job setup, pipeline and delivery pipeline views and build automation using Jenkins server. Responsible for design and maintenance of the GIT Repositories and performed all necessary day-to- day GIT support for different projects and configured local ANT repositories and multi-component Ant projects with Nexus repositories and scheduled project builds in Jenkins for continuous integration. Configured local Maven repositories and multi-component Ant projects with Nexus repositories and scheduled projects in Jenkins for continuous integration. Worked on Maven to create artifacts from source code and deploy them in Nexus central repository for the internal deployments. Integrated GIT into Jenkins to automate the code check-out process. Used Maven to build RPMs from source code checked out from GIT and Subversion repository, with Jenkins being the Continuous Integration Server and Artifactory as repository manager. Used Subversion (SVN) for version control of the product and Clear Quest and Bugzilla as Reporting Tool. Experience working with relational and NoSQL databases, proficient in SQL. Installed and configured servers using Python and Bash scripts and created documentation for the servers. Used Junit which is open source framework to write and run repeatable tests cases for testing framework. Configured Splunk to monitor real-time gr angular metrics of all the logs and configured dashboards for each resource agents. Worked on sending application management logs to Splunk using user provided services and integrate artifactory repository server to handle multiple external and internal project binaries. Installed, configured and administered JBOSS 6.0 server in various environments. Used JBOSS framework to support the development and implementation of applications. Created post commit and pre-push hooks using Python in SVN Worked on Redhat5.x and 6.x, SUSE Linux 10.x and in VMware vSphere client 5.x virtual environment. Top to bottom comprehension of the principles and best practices of the Software Configuration Management (SCM) in Agile, SCRUM and Waterfall methodologies. Prepared selenium test cases and executed server configurations. Environment: SVN, GIT, ANT, Maven, Azure, Chef, Puppet, Jenkins, UNIX, Linux, Perl, Bash, Python, Ruby, Web logic, Tomcat, JIRA, Docker Linux System Administrator Confidential Responsibilities: Provided CM and Build support for more than 3 different applications, built and deployed to the production and lower environment. Defined and Implemented CM and Release Management Processes, Policies and Procedures. Implemented, maintained and supported reliable, timely and reproducible builds for project teams. Maintained build related scripts developed in ANT, Python and Shell and modified build configuration files including Ant's build.xml. Worked with development team to migrate Ant scripts to Maven. Experienced in authoring pom.xml files, performing releases with the Maven release plugin, Mavenization of Java projects and managing Maven repositories. Researched and implemented code coverage and unit test plug-ins with Maven/Jenkins. Used Maven dependency management system to deploy snapshot and release artifacts to Nexus to share artifacts across projects. Configured and maintained Jenkins to implement the CI process and integrated the tool with Ant and Maven to schedule the builds. Worked with development, testing, deployment, systems/infrastructure and project teams to ensure continuous operation of build and test systems. Installed, configured and administered WebSphere Application Server 6.1on Solaris Server. Created custom developer tools and workflows for testing and releasing Puppet code. Automated the Build Process using Jenkins and handled complete Build and Release process including code, documentation and supporting testing team along with the server Administration. Updated Release reports from change management control and Used Puppet to automate Configuration management & Applications. Worked as an SCM in automating the build and deploy process through Anthill Pro and Build forge on deploying applications in WebLogic. Installed and Configured Jenkins for Automating Deployments and providing an automation solution. Integrated GITHUB into Jenkins to automate the code check-out process and Used Jenkins for Automating Builds and Automating Deployments. Implemented the setup for Master slave architecture to improve the Performance of Jenkins. Used Jenkins, Jira, Docker, Bamboo, Build forge for Continuous Integration (CI) and deployment into WebSphere Application Server. Installed and Configured the Nexus repository manager for sharing the artifacts within the company. Supported and developed tools for integration, automated testing and release management Verified if the methods used to create and recreate software builds are consistent and repeatable. Involved in Research of the project application architecture to support/resolve build, compile, and test issues/problems. Releasing code to testing regions or staging areas as per the schedule published. Used Jira as ticket tracking and work flow tool. Environment: Linux, Jenkins, Docker, GIT, Weblogin Server, Tomcat Server, Apache Server, Chef, Puppet, AWS, VPC, VM's, AWS CloudFormation, EC2. System Engineer Confidential Responsibilities: Install and configure Ubuntu, Centos on remote servers and Desktop servers. Working with developers to load software onto Linux Enterprise servers and debugging Scripts. Set up and administer user and groups accounts, setting permissions for users. Diagnosed and resolved problems associated with DNS, DHCP, VPN, NFS, and Apache. Used LVM for the management of logical volumes including the creation of physical volumes in Linux. Creation and administration of Virtual Machines using VMware. Utilized Remote Desktop on Windows to provide connectivity and support for remote users. OS upgradation and installation of third-party software, packages, and patches as per requirement. Maintaining the Linux Firewall for network and implement to secure the network. Troubleshooting the network with the help of Netstat, Ping, NSlookup and Traceroute tools. Environment: Ubuntu, Linux, Apache, debugging, Remote, LVM, CentOS, Windows, Netstat, Ping, NSlookup.