SUMMARY Cloud Engineer with 5+ years of expertise in continuous Integration and Deployment implementing strategies within Azure and AWS platforms, an extensive skill in areas of DevOps, managing and involving in server infrastructures, administration of mission critical, high availability environments, Build/Release management Designed, configured and deployed Microsoft Azure for a multitude of applications utilizing the Azure stack (Including Compute, Web & Mobile, Blobs, Resource Groups, Azure SQL, Cloud Services, and ARM), focusing on high - availability, fault tolerance, and auto-scaling. Extensive experience of automating, configuring, deploying instances on Azure environment, migration of on premise to Azure with Azure Site Recovery, Azure backup, Azure AD Connect Experience in configuring collaborations Azure AD B2C, Azure AD B2B Domain services with third party identity providers authentications for applications with roles and policies Worked on Multiple AWS instances, set the security groups, Elastic Load Balancer and AMIs, Auto scaling to design cost effective, fault tolerant and highly available systems. Worked on Multiple AWS instances, set the security groups, Elastic Load Balancer and AMIs, Auto scaling to design cost effective, fault tolerant and highly available systems. Develop and maintain automation and orchestration software and scripting to integrate with all underlying public and private cloud technologies. Written Templates/Modules for AWS infrastructure as a code using Terraform to deploy applications in multiple environments. Implemented domain name service (DNS) in AWS and Aure to have highly available and scalable applications. Experience with built Elastic search, Log stash and Kibana (ELK) for centralized logging and then store logs and metrics into S3 bucket using Lambda function for more than 2 weeks Experienced with setup, configuration and maintain ELK stack (Elasticsearch, Logstash and Kibana). Experience working on several Docker components like Docker Engine, Hub, Machine, Compose and Docker Registry. Experience working on Docker hub, creating Docker images and handling multiple images primarily for middleware installations and domain configurations. Experience in Configuring network services such as DNS/NFS/NIS/NTP for CentOS Linux Servers. Extensively worked on Installing Firmware Upgrades, kernel patches, systems configuration, system Performance tuning on Unix/Linux systems. Worked on Installing, upgrading and configuring Red Hat Linux 4.x, 5.x, and 6.x using Kickstart Servers. Also administered Active Directory (AD) Strong experience in working in Linux and Windows environments. Experience in Linux/Unix System Administration, Installations, Upgrades and Troubleshooting on RHEL 5.x/6.x Experience in Performing SVN to GIT migration and Implemented & maintained the branching and build/release strategies utilizing GIT. Worked in all areas of Jenkins setting up CI for new branches, build automation, plugin management and securing Jenkins and setting up master/slave configurations. Experienced in implementing multiple CI/CD pipelines as part of DevOps role for on-premises and cloud-based software using Jenkins, Chef and AWS/Docker. Experience in load balancing and monitoring with Nagios and Splunk, ELK (Elastic search, Log Stash, Kibana) Implemented Maven for creating build artifacts, and delivered the packages to Apache Tomcat using Ansible Configured kickstart server and updating/applying patches to the servers using Red Hat Satellite server. Experience in Creating Terraform custom templates to generate dedicated VPC’s, NAT subnets for Web & databases applications Work with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation Experience in Developing and documenting automated build scripts using python for in-house and AWS infrastructure. Experience in Writing Python Scripts to develop automated scripts and frame works. TECHNICAL SKILLS Operating Systems: Linux (Red Hat /6/7, CENTOS & SUSE), Solaris 11/10/9/8,Ubuntu 12/13/14, Windows 2008/2012/2016 Cloud Environments: Microsoft Azure, AWS, Google Cloud Application and Web Servers: Web Logic Application Server 9.x, 10.x, Apache Tomcat 5.x/7.x, Red Hat JBOSS, WebSphere 8.x, IIS Version control Tools: Git, SVN, Bitbucket CI/CD & Build Tools: Jenkins, Bamboo, Maven, ANT, Gradle, VSTS Automation & container Tools: Chef, Puppet, Ansible, Kubernetes, Docker, Docker Swarm, Kickstart, CloudFormation, Terraform Monitoring Tools: Nagios, Splunk, Cloud watch, ELK, Prometheus, Graylog Networking/Protocol: TCP/IP, NIS, NFS, DNS, DHCP, WAN, SMTP, LAN, FTP/TFTP Virtualization: VMware ESXi, Windows Hyper-V, Power VM, Virtual box,V Center, vSphere Scripting: Python, YAML, Ruby, PHP, Bash Shell scripting, PowerShell, JSON Volume Manager: VERITAS Volume Manager, Solaris Volume Manager, LVM with Linux, AIX-LVM PROFESSIONAL EXPERIENCE Confidential, Atlanta Cloud/Devops Engineer Responsibilities: Creating fully automated CI build and deployment infrastructure and processes for multiple projects using Docker, Jenkins (Cloudbees), sonarqube, VMWare, RHEL, Satellite, Kubernetes, Jfrog Artifactory, Ansible, AWS & GitLab. AWS Route53 was Configured to manage DNS zones globally, create record sets, DNS failover and health checks of domains, and assign domain names to ELB and CloudFront. Designed and created all AWS Cloud Architecture in Multi-Region VPC (w/ VPC Peering), EC2, Security Groups, S3 Buckets, VPNs, Subnets, Network ACLs, etc Created one-click AWS deployments of multi-tier Enterprise Applications complete with Full automation Auto-Scaling (ASGs, ELBS, CloudFormation, SNS), Automated Patching (CodeDeploy), and Automated Monitoring (CloudWatch, Sumologic). Managed servers on the Amazon Web Services (AWS) platform using ansible/chef configuration management tools and Created instances in AWS as well as migrated data to AWS from data Center. Expert in writing Chef Cookbooks and Recipes to automate the deployment process and to integrate Chef Cookbooks into Jenkins jobs for a continuous delivery framework. Installed Workstation, Bootstrapped Nodes. Wrote Recipes and Cookbooks and uploaded them to Chef-server. Managed On-site OS/Applications/Services/Packages using Chef as well as AWS for AWS/S3/Route53&ELB with Chef Cookbooks. Installed Chef-Server Enterprise On-Premise/WorkStation/ Bootstrapped the Nodes using Knife. Built Jenkins jobs to create AWS infrastructure from GitHub repos containing terraform code Using the Chef Cookbooks/recipes migrated the VMWARE VMs to AWS and Managed Services like EC2, S3Bucket, Route53, ELB, and EBS etc. Enforcing Test Driven Development (TDD) approach for writing Chef Cookbook using Test-kitchen, Vagrant, Berkshelf, FoodCritic and Chef Spec. Included in the DevOps team for build, design and maintain the platform automation infrastructure using Chef/Puppet Developed Chef cookbooks to install and configure Apache, Tomcat, Splunk, CICD Jenkins, WebLogic, Rundeck and deployment automation Ansible to deploy ELK for automating continuous deployment (CD) and configured Nodes and deployment failure reporting Open Stack Enterprise Environment. Upgraded Entire ELK Cluster to newer releases. Automate the installation of ELK agent (file beat) with Ansible playbook. Developed KAFKA Queue System to Collect Log data without Data Loss and Publish to various Sources. Deployed and configured Elastic search ELK, Logstash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and Cloud Watch. Worked on Docker container snapshots, attaching to a running container, removing images, managing Directory structures and managing containers. Integrated Docker container orchestration framework with Kubernetes by creating pods, config Maps, deployments, Replica sets, nodes etc. Worked on Docker container snapshots, attaching to a running container, removing images, managing Directory structures and managing containers. Deployed multiple databases and applications using Kubernetes cluster management, some of the services are Redis, Nginx etc and maintained Kubernetes to manage Containerized applications. Used Kubernetes for container operations in AWS, used Kubernetes clusters as a network and load balancer, also Kubernetes is also good at running web applications in a cluster way, also used in multiple services by creating images and reduced space. Implementing infrastructure on new AWS systems and migration of existing Linux and Windows based Infrastructure to AWS and Azure Cloud plat forms and automated using Terraform Templates. Launching and configuring of Amazon EC2 Cloud Servers using AMI’s (Linux) and configuring servers for specific applications. Integrating various Version control tools, build tools, nexus and deployment methodologies (scripting) into CICD Jenkins to create an end to end orchestration build cycles. Implementation of CI/CD pipeline for the Azure cloud-based analytical data ecosystem using Azure Devops (VSTS) GIT as versioning controlling and hosted pipelines for build and release. Involved in developing micro services integrated withVSTSfor CI/CD by automating the build/release process using Git as source control. Experienced in migrate an On-premises VM or Azure Classic VM to Azure ARM Subscription with Azure Site Recovery. Design/Implement Azure Site Recovery/Azure Backup, Implement Azure RMS and EMS. Created Terraform custom templates to generate dedicated VPC’s, NAT subnets for Web & databases applications Work with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation Created Python Scripts to Automate AWS services, include web servers, ELB, Cloud front Distribution, database, EC2 and database security groups, S3 bucket also the application configuration, this Script creates like stacks, single servers or joins web servers to stacks. Wrote AWS Lambda functions in python for AWS's Lambda which invokes python scripts to perform various transformations and analytics on large data sets in EMR clusters Environment: /Tools: Azure(Virtual machines, Blob storage, Azure DNS, VNets, Load balancer, Traffic Manager, CDN, Disk Storage, App Service, etc), VSTS, Pivotal Cloud Foundry (PCF), Nexus, Terraform, Docker, Docker Swarm, Kubernetes, Linux, Jenkins, SonarQube, Git, GitHub, Hashi corp tools, Python, Nagios, Splunk, TFS,JIRA, PowerShell, ServiceNow Confidential, Folsom, CA Site Reliability Engineer Responsibilities: Conducted systems design, feasibility and cost studies and recommend cost-effective cloud solutions such as AWS Worked on Multiple AWS instances, set the security groups, Elastic Load Balancer and AMIs, Auto scaling to design cost effective, fault tolerant and highly available systems. Develop and maintain automation and orchestration software and scripting to integrate with all underlying public and private cloud technologies. Written Templates for AWS infrastructure as a code using Terraform to build staging and production environments. Worked on Designing, Installing and Implementing Ansible configuration management system and writing playbooks for Ansible using YAML and deploying applications. Hands-on experience on Ansible and Ansible Tower as Configuration management tool, to automate repetitive tasks and quickly deploys critical applications. Automated various infrastructure activities like Continuous Deployment, Application Server setup, Stack monitoring using Ansible Playbooks and has integrated Ansible with Jenkins. Created Ansible cloud modules for interacting with AWS services which provides the tools to easily create and orchestrate infrastructure on AWS and automated cloud-native applications Installed Patches/Packages on Solaris Servers and RPM packages on Linux Servers. Installing Red Hat Linux using kickstart and applying security polices for hardening the server based on the company policies. Performed package administration on Linux using rpm and yum through RHN Satellite and subscription manager. Used UNIX/Linux shell scripting to automate system administration tasks, system backup/restore management and user account management. Design, develop build and packaging tools for continuous integration build and reporting. Automate the build and release cycles. Development of company´s internal CI system, providing a comprehensive API for CI/CD Develop, Maintain and support Continuous Integration framework based on Jenkins Integrated Jenkins with various DevOps tools such as Nexus, SonarQube and used CI/CD system of Jenkins on Kubernetes container environment, utilizing Kubernetes and Docker for the runtime environment for the CI/CD system to build and test and deploy. Responsible for design and maintenance of the GIT Repositories, and the access control strategies. Extensively used Splunk as server monitoring tool to diagnose, debug and report the deployment issues. Used Splunk APM for log aggregation and analysis on different application servers Developed build and deployment scripts using ANT and MAVEN as build tools in Jenkins and deploy applications to various environments using UDeploy. Developed build and deployment scripts using Maven as build tool in Jenkins to move from one environment to other environments and Involved in editing the existing Maven files in case of errors or changes in the project requirements. Created profiles in maven to launch specific TestNG suite from Jenkins job. Wrote Python Scripts to develop automated scripts and frame works. Environment: /Tools: AWS, S3, EBS, Elastic Load balancer (ELB), Auto Scaling groups, VPC, IAM, Cloud Watch, Glacier, ELK, Dynamo DB, shell scripts, GIT, Mesos, Docker, Maven, Jenkins, Puppet, Python, Apache Tomcat6.x/7.x, Windows and Linux environment. Confidential, San Jose, CA Devops Engineer Responsibilities: Wrote Ansible playbooks with Python SSH as a wrapper to manage configurations of Open Stack Nodes and the test playbooks on AWS instances using Python. Monitored, Created, Multiple Ansible playbooks for auto-provisioning of test environments using Docker /Vagrant and auto deployment of artifacts and troubleshooting production systems using Nagios. Involved in writing the chef cook books and recipes to automate the deployment process and to integrate the chef cook books into Jenkins jobs for continuous delivery framework. Responsible for installation and configuration of VMware ESX server 3.5 on dell and HP ProLiAnt servers and configured VMs for Solarisx86 and Linux. Worked on implementation team to build and engineer servers on Ubuntu and RHEL Linux. Provisioning virtual servers on VMware and ESX servers using vCloud. Installed, upgraded and configured Red Hat Linux 5.x and 6.x using Kickstart installation and SUSE Linux Servers manually as well as using System Imager and updating using YUM Production Support on Red Hat Linux Systems in a 24/7 Production Environment to ensure maximum availability of all servers and applications. Built unified base OS image for family of embedded Linux systems, configuring boards for different personalities via boot-time scripting Proposed branching strategies for version control tools like GIT, Stash, GitHub and creating files and pushing into the GitHub. Used Jenkins and pipelines to drive all micro services builds out to the Docker registry and then deployed to Kubernetes. Responsible to setup Jenkins server and build jobs to provide continuous builds based on polling and post-hook scripts in source control systems (GIT and SVN) during the day using Jenkins, Junit, Maven. Worked on User administration setup, maintaining account, Monitor system performance using Nagios. Setup and managed Nagios XI Alerts for all of WATCH Support Teams of 70+ Developers and Support Staff. Deployed snapshot and released artifacts to nexus using Maven to share artifacts across projects and environments. Involved in authoring pom.xml files, performing releases with the Maven release plugin, and managing Jfrog artifacts in Sona type NEXUS repository. Compiled Java Code, performed Debugging and Placed Builds into Maven Repository by using MAVEN Configured KickStart and Jumpstart environments. Installed, and configured RHEL using Kickstart and Solaris 9, 10 using Jumpstart. Wrote AWS Lambda functions in Python which invokes Python scripts to perform various transformations and analytics on large data sets in EMR clusters. Environment: /Tools: Ant, Maven, Chef, AWS, Git Hub, Jenkins, Puppet, Python, Data Bag, Cloud Watch, Red hat Linux, UNIX, Bit bucket, Jira, Windows servers, Git. Confidential Linux Administrator Responsibilities: Hands on experience on patching and updating of Linux servers from the Satellite Servers, Red Hat Network (RHN) and Solaris servers from the centralized repository and using Patch Update Manager. System configuration/hardening using IP tables, SE Linux, TCP Wrappers, ACL and traditional permission on Linux servers as well as restricting access to terminals, disabling unnecessary services and securing. Performed Deployment of Release to various QA&UAT in Linux environments Experience in installation, configuration, tuning, security, backup, recovery and upgrades of Linux, Power Systems. Expert in setting up SSH, SCP, SFTP connectivity between Linux hosts. Experienced in DNS, NIS, NFS, CIFS, FTP, NIS, Samba Server, LDAP, remote access, security management, and system troubleshooting skills. Installed upgraded and configured Red Hat Linux 5.x and 6.x using Kickstart installation and SUSE Linux Servers manually as well as using System Imager and updating using YUM and worked on upgrading and configuring SGI Servers. Worked on Linux server virtualization by creating Linux VMs for server consolidations. Experience with Atlassian tools like Bamboo, Jira, and confluence Assisted internal users of Splunk in designing and maintaining production-quality dashboard. Mavenization of Java projects and managing Maven repositories. Researched and implemented code coverage and unit test plug-ins with Maven/Jenkins. Scripting in multiple languages on UNIX, LINUX and Windows - Batch, Shell script Etc Shell Scripting to automate tasks on Solaris and Linux and automated jobs using Crontob. Environment: /Tools: Bamboo, Subversion, Ant, Puppet, Apache Tomcat, JBOSS, Eclipse, Oracle, DB2 MS SQL Server, Java, J2EE, Ruby, Shell, Windows, Linux 