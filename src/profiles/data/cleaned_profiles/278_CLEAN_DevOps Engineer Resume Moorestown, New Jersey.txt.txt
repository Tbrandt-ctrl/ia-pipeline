SUMMARY Skilled DevOps Engineer with 4+ years of hands - on experience supporting, automating, and optimizing mission critical deployments in AWS, leveraging configuration management, CI/CD, and DevOps processes. Strong understanding with various branching and merging strategies for best practices of Source Code Management (SCM) processes like GIT, Subversion SVN on Linux and UNIX systems Hands-on experience on Continuous Integration server like Jenkins, GoCD and deployment into Tomcat/WebSphere Application Servers. Development of Puppet modules with Hiera, r10k continue deployment of managed products and related services. Integrated Sonartype Nexus repositories to Jenkins to upload the artifacts (jar, war & ear) during the Maven build and administrated them into configuration management tools using GAV. Worked on different flavors of Linux, UNIX to implement zero redundant, instant fail-over servers. Architected and designed VMware ESXi5.5 clusters Working knowledge in tracking the defects status by using JIRA tool and Remedy force for resolving the issues as per SLA. Involved in creation of modules in terraform which works on infrastructure as a code. Working knowledge on Automating the cloud operations with operations orchestration in Azure Architected and designed Rapid deployment method using Ansible to auto deploy servers as needed. Hands-on Experience in writing Python, Ruby scripts for building deployment pipelines. Strongly experienced in debugging disparities in HTTPD proxy configuration while deploying various versions of application. Even created backup for production environment like Blue/Green environment. Created AWS cloudfomation templates to create custom-sized VPC, subnets, EC2 instances, ELB, AWS lambda, security groups. Worked on tagging standard for proper identification and ownership of EC2 instances and other AWS services like Cloud Front, cloudwatch, RDS, S3, Route53, SNS, SQS, Cloud Trail. Collaborated with development support team to setup a continuous deployment environment by using Docker, Docker swarm and kubernetes. Worked on cloud watch to collect and track metrics, collect and monitor log files, set alarms and automatically react to changes in your AWS resources. Experienced in building and maintaining Docker infrastructure using Kubernetes for SOA applications in agile environment. Architected a Lamp Stack application in AWS using VPC, S3, Route 53, EMR, Redshift, Auto scaling, Elastic Beanstalk, SQS, SNS, RDS MySQL. I configured Cassandra database in on-premises Constructed a RESTful API and Soap API to manage infrastructure services using Python. Created a new Performance Environment to test a true scalable environment before a release to production. Credentials include Virtual cloud technology expert, end-to-end solution design expert, Cloud foundry and capacity planning. TECHNICAL SKILLS Operating Systems: RHEL Linux, Windows7/8/10, UNIX, Centos, Ubuntu Source code management tools: Subversion, GIT. Cloud services: AWS, Azure Build Tools: ANT, MAVEN Continuous Deployment Tools: CHEF, Puppet, Ansible, DOCKER, udeploy, xldeploy Continuous Integration Tools: Jenkins, bamboo Servers: Apache, Tomcat, Ngnix, HAproxy, HTTPD, Microsoft IIS Network Protocols:  SMTP, SNMP, ICMP, TCP/IP, FTP, TELNET, UDP and RIP Scripting Languages: Python, Shell scripting, Ruby, C, HTML, CSS, JavaScript PROFESSIONAL EXPERIENCE Confidential - Moorestown, New Jersey DevOps Engineer Responsibilities: Created a Patch installation script which install the Base Patch bundles. Worked on Creating RHEL Virtual Machines based on Ansible playbooks using ovirt modules. Created Ansible Playbooks for sending the Traffic profiles like Sipp, Apache bench, JMeter to all the Virtual machines Researched and developed Apache 2.2 SSL proxy front end proof of concept that provides SSL encrypted communications between our Tomcat 7 servers and our Apache front-ends. Ported Linux BASH and python scripts to send the log metrics like load average, CPU utilization to kibana using file byte. Deploy and Monitor scalable infrastructure on AWS &configuration management using Ansible playbooks. On AWS cloud platform programmatically launched instances and used services with API calls, CLI and SDK. Worked on AWS cloud infrastructure to maintain Web servers on EC2 instances with AMIS behind Elastic load balancer with Auto-scaling to maintain scalability and elasticity to scale up and down the servers as per requirement. Maintained application servers, web server and Database (to maintain user access data, metadata or any log data) in the cloud environment. Used multiple availability zones of AWS to provide high availability and fault tolerance. Plans and coordinates the administration of PostgreSQL databases to ensure accurate, appropriate, and effective use of data, including database definition, structure, documentation, long - range requirements, and operational guidelines. Using Ansible as an automation engine for cloud provisioning, configuration management, application deployment, intra service orchestration and multi-tier deployments. Ansible playbooks are run by customized setting of hosts and Ansible configuration files. Managed the secrets in Ansible using host vars and default vars. Ansible playbooks are checked and tested with dry run and molecule tests. Responsible for Continuous Integration (CI) and Continuous Delivery (CD) process implementation using Jenkins. Building and Deploying Java/J2EE applications to Tomcat Application servers in an agile continuous integration process and automating the whole process. Involved in periodic archiving and storage of the source code for disaster recovery. Environment: GIT, Ansible, Jenkins, JSON, Tomcat, Apache, Python, JIRA, Docker, Maven, Nexus, Nagios, RedHat Linux, Ubuntu, CentOS, Linux, JAVA. Confidential - Rockville, Maryland Cloud DevOps Engineer Responsibilities: Involved in creation of platform that deploys the applications using GIT, GoCD, Artifactory, ECS clusters and various services of AWS which by name called as PAAS platform as a service. Involved in migration of Artifactory from docker registry. Developed a python script that allows access tokens of artifactory to send images from docker registry and also from ECS clusters. Managed a Docker security service by name twistlock for all the scanning of the docker images. Built various Pipelines in GoCD for continuous deployment using value stream maps. Worked for sending AWS VPC flow logs to logentires using AWS lambda function. Also, modulating them in Terraform. I created pre-commit hook to restrict developers to commit when security token or config files are detected. I also involved in creating pre- push hook which reverts to previous build on failure. On success it pushes code into GIT repository and runs configuration management tool. Updated Docker file for alpine images. Configured Cloud trail logs to populate to logentries by using cloud watch log group using lambda function. Configured Jump role which manages the switch role concept in AWS to maintain the security and easy accessibility. Created IAM roles and attach policies for lambda, S3 etc. Worked on Auto scaling launch configuration for scaling up and down of instances. Attended POC for puppet for windows which enhances my skills of puppet and PowerShell concepts. Managed pipeline for docker image which automatically build images and scan the images and push the images to artifactory. Involved in maintaining the application security in Cloud and on-prem by using IBM app scan. The vulnerabilities of system is controlled by app scan. Created stack in terraform which populates the infrastructure by using code. Involved in developing various Modules in terraform like logentries lambda module which are reusable. For monitoring we used Logentries and data dog which notify us on every minute change in all environments. Involved in maintaining the Linux servers up by doing daily maintenance of servers like processing the batch jobs, Patch work etc. Updated the remedy force tickets and assign them to the right client. Environment: GIT, Puppet, Mercurial, Jenkins, JSON, Tomcat, Apache, Python, JIRA, Docker, Maven, Nexus, Nagios, RedHat Linux, Ubuntu, Terraform, CentOS, Linux, JAVA, AWS EC2, ELB, SQS, S3, Cloud Formation Templates, RDS, Cloud Watch. Confidential - Herndon, Virginia Build and Release Engineer Responsibilities: Integrated Jenkins with SonarQube in order to push repositories to nexus using SonarQube plugin Administered Jenkins continuous integration server installation and configuration to automate application packaging and deployments. Maintained over 100+ jobs in Jenkins from 8 different Application teams for over 45 releases in parallel. Our LOB consists of 4 Ansible towers. We have main playbook for maintaining roles, inventory files and groups variables. Groups variables are used for passwords and authentication purpose. In inventory files we used to manage the servers that are needed. Wrote Ansible Playbooks with PythonSSH as the Wrapper to Manage Configurations of AWS Nodes and Test Playbooks on AWS instances using Python Provisioned AWS instances using Ansible playbooks and also managed various services of AWS like ELB, EBS and IAM etc. Maintained high availability clustered and standalone server environments and refined automation components with scripting and configuration management (ansible) I wrote the ansible playbooks which is the entry point for Ansible provisioning, where the automation is defined through tasks using YAML format. Run Ansible Scripts to provision Dev servers. Worked on Ansible for Configuring and developing middleware component roles in the playbooks across organization which is useful for multitier orchestration. Executed various modules in Ansible to invoke various playbooks. Configured various playbooks in Inventory and Groupvars section in Ansible. Documented all the useful info about the release, software versions, changes implemented in current release, Defects fixed, Labels applied. Worked on Docker and Vagrant for different infrastructure setup and testing of code. Managed MFA, IAM roles, policies, groups to configure AWS account. I used various services of AWS for this infrastructure. I used EC2 as virtual servers to host Git, Jenkins and configuration management tool like ansible. Converted slow and manual procedures to dynamic API generated procedures. Environment: AWS, Chef, JSON, GIT (GIT HUB), Maven, Nexus, DB2, Remedy, PRTG, Tomcat, Apache HTTP, Nexus Confidential - Dover, Delaware DevOps Assistant Responsibilities: I aligned processes and tools such as branching, source control structure, dependency management, Linux/Windows hybrid build infrastructure, code review and check-in policies that are developed and instrumented by DevOps teams across projects globally. Provisioned EC2 instances for dedicated hosts like Ubuntu Linux and Windows virtual servers. Configured Elastic Load Balancers with EC2 Auto scaling groups to avoid spinning up of instances Involved in designing and deploying multitude applications utilizing almost all of the AWS stack (Including EC2, Route 53, S3, RDS, Dynamo DB, SNS, SQS, IAM) focusing on high availability, fault tolerance, and auto scaling in AWS. Designed and built a cloud based, auto-scaling, video transcoding application wrapped around ffmpeg to demonstrate how to leverage the capabilities of our private cloud. Created automation for many AWS specific tasks such as parsing a csv for automated read/writes into Dynamo DB so that changes are source controlled and automated via Jenkins Proposed infrastructure for the stack implementation with proof of content and bring up all the teams to work collaboratively. Provided continuous delivery for production support processes through tasks like automated serial number (Sn) assignments for product distribution channels (pdc.) in QA/Test environments. Implemented various disaster recovery plans like maintaining multiple availability zones and always maintaining backups Used IAM to create new accounts, roles and groups for different users to maintain security. Supported a 24x7 application infrastructure in AWS for Development, Testing, Staging and Production. I also worked on VPC, subnets, NACL’s, Internet gateway and integrate them according to the need. Created AWS S3 buckets, performed folder management in each buckets. Managed cloud trail logs and objects within each buckets. Implemented various stacks in cost-effective infrastructure by using cloud formation scripts and deployed the application through Opswork Used EC2 for virtual servers and provisioned git, Jenkins, configuration management tool like chef on each server. Environment: Puppet, Jenkins, AWS NACls, testing environment design, JAVA, NoSQL, ANT, MySQL, DB2, Shell Scripts. Confidential Software Engineer Responsibilities: Work closely with Scrum teams (Dev, QA) to make sure to bridge any gaps. Resolve any issues arise for commits, Build, Deployment on day to day basis. Educated team about continuous integration and automated testing practices and supported them throughout development. Deployed Puppet, Puppet Dashboard, and Puppet DB for configuration management to existing infrastructure. Deployed mcollective for orchestration. Wrote custom mcollective plugins to deal specifically with our needs. Deployed LDAP for centralized authentication. Use of Foreman, Foreman API and Vagrant to lifecycle management of virtual servers in Non-Production environments on Virtual Box and vSphere. Performed various API calls, XLM to document the server configuration. Task automation, service management and application deployment using Bash scripting, Puppet modules With Hiera and Jenkins Built Puppet manifests and bootstrap scripts to allow us to bootstrap instances to various roles without having to maintain AMIs. Worked on POC to migrate to Windows Azure to address scalability and performance issues. Load tested infrastructure using a combination of off the shelf solutions (apache bench, jMeter, MySQL bench, etc.) and homemade applications. Compared different hardware, OS, and application configurations to meet anticipated demand requirements. Helped developers analyze slow query logs and refactor existing database structure for improved performance. Built a data warehousing system to load raw application log files into a MySQL database for our analytics team for in depth analysis. Developed a suite of business intelligence reports that ran on a nightly basis to feed information to management. Redefined processes and implemented tools for software builds, patch creation, source control, and release tracking and reporting on windows platform. Environment: Puppet, Jenkins, Vagrant, JAVA, NoSQL, vCenter, ESX, Web logic. 