SUMMARY Over 8+ years of IT experience like gathering requirements, Analyzing, developing, deploying and maintaining of web based as well as enterprise applications using Java/J2EE technologies. Strong experienced in developing web applications using JAVA/J2EE concepts like Object Oriented Programming, Multithreading, Collections, Java Swing, Exception Handling, JDBC, JSP, Servlet, Hibernate, SPRING, Web Service, Struts and Java Beans. Better understanding of using Spring Cloud - Netflix OSS stack for microservices deployment and auto configurations like Ribbon (client-side Load Balancer), Hystrix (latency and fault Tolerance library), Zuul (gate way for routing, monitoring, security) with Eureka service Registry and log management with ELK. Good working knowledge in Spring MVC, Spring Core, Spring IOC, Spring AOP, Spring Security, Spring DAO, Spring Management, Spring Data, Spring Access, and Integration, Spring ORM, Spring Transaction, Spring Batch and Spring Boot. Implemented microservice architecture using spring boot and Spring REST to create REST endpoints and integrated Swagger Spring boot to get dynamic documentation. Hands on experience in implementing SOA (Service Oriented Architecture) and web services such as SOAP and REST using WSDL, CXF2, JAX-WS, and JAX-RS. Experience in Spring with JDBC/Hibernate modules where Hibernate is used for ORM frameworks. Extensive experience with Java based ORM frameworks involving Hibernate, JPA, Spring Data, Spring JDBC and I-batis. Proficient in working with MySQL, Oracle, DB2, SQL Server, RDBMS. Good knowledge in writing stored procedures, Packages and functions using SQL & PL/SQL and good at advance PL/SQL topics like Triggers, Collections. Designed and implemented teh rules of Business Logic using spring and EJBs. Proven knowledge in NoSQL Document Store databases such as MongoDB, Cassandra. Building real-time dashboard applications for visualizing, analyzing and exploring data on Apache Web servers using Elastic Search, Logstash and Kibana 4.0 (ELK), Splunk. Well experienced in using various AWS (Amazon Web Services) Iaas (Infrastructure as a Service) Components like EC2 for running applications on virtual machines, S3 and Glacier for storing and long term back up of data, EBS for persistent block level storage, Elastic Cache, Dynamo DB, SQS for message queueing, RDS for setting relational database in cloud and Lambda for serverless program functions. Hands on experience in implementation of PCF (Pivotal Cloud Foundry) Paas (Platform as a Service) services such as Pivotal Application Service, Pivotal Container Service, and Pivotal Functional Service to continuously deliver applications on to teh cloud. Knowledge on various Docker components like Docker Engine, Hub, Machine, Compose and Docker Registry. Involved in CI/CD process using GIT, Nexus, Jenkins job creation, Maven build Create Docker image and deployment in AWS environment. Configured OIDC (Open ID Connect) on top of OAUTH 2.0 authentication and authorization framework to provide teh security to REST web services. Expertise in generating logging by Log4J to identify teh errors in teh production test environment and experienced in build tools Ant, Maven, and Gradle. Experienced in testing with JUnit using tools like JMeter, Mockito and Easy Mock. Good Experience in Java Web frameworks such as Spring MVC, Struts, JSF (Java Server Faces). Expertise in configuring and deploying applications on Apache Tomcat, IBM WebSphere, WebLogic, and JBoss server. Expertise in Prototyping, Agile, Scrum, Water-Fall and Rapid Application Development methodologies. Expertise in developing, documenting, and executing test cases manually as well as generating automated scripts using Selenium. Good Experience in developing UML diagrams like Use Case diagram, Class diagram, Sequence diagram and Behavior Diagram using UML tools such as IBM Rational Rose. Experience in using JAXB, JAXP parsing and XMLBean to process, validate, parse and extract data from XML files. Proficient in XML and technologies like XSL/XSLT, SAX, DOM, XPath, SOAP, WSDL, DTD, XSD, JAXB, JAXP and Apache Axis. Worked on various Message queues like JMS framework, Rabbit-MQ, IBM-MQ, Active-MQ and Apache Kafka. ConfiguredKafkato read and write messages from external programs and to handle real time data. Worked on Kafka cluster which typically consists of multiple brokers to maintain load balance. Used Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message consumption and worked on Zookeeper to maintain services. Implemented Single Sing On and policy based authentication using Site Minder security framework. Having experience in creating sites dat have Single Sign On using CASS and Spring Security. Experience on Shell Scripting dat contains a sequence of commands for UNIX-based operating System writing Worked on Web Services testing using Selenium IDE, and Selenium RC Server, SeleniumGrid/Web Driver Testing, SOAPUI and Testing. Experience in Developing Web based GUI using HTML5, DHTML, XHTML, Bootstrap, CSS, SASS, SCSS, JavaScript, and jQuery, JSP, ES5, ES6, Typescripting, BackboneJS, AngularJS, ReactJS, KnockoutJS, EmberJS and AJAX. Good Knowledge in JavaScript library used for building reusable UI components like React JS. Strong Experience in Client MVC frameworks like Angular JS, Backbone JS, KnockoutJS, Ember JS, and EXT JS. Experienced in MVVM framework like Angular 6.0in which RxJs is used internally, and as an event handler ngModelChange can be used. Designed and Developed Various Angular 4.0/5.0 Components (ngModules), Services (observable/promises), Directive and Pipes. + Experienced in optimizing teh performance of an application using Angular 4 Lazy Loading and ahead of time compilation. Very experienced in using Angular 4 to allow fully encapsulate custom elements, creating custom elements, HTML imports, and Shadow Dom. Experienced in Implementing React JS with Redux and Flux patterns to attain MVC functionality. Experience in Server Side Java scripts like NodeJS with (ExpressJS or hapi.js). Strong experience in working on JavaScript environment like MEAN (Mongo, Express, Angular, Node). Good understanding of client side build tools NPM, Bower, task runners like Grunt and Gulp. Experience in unit testing for JavaScript using Jasmin, Karma, and Protractor for Angular JS, Mocha and Chai for React JS and Backbone JS. Experience in version control systems like GIT, CVS and Tortoise SVN. Quick in learning and working with new technologies to fulfill project needs. Good debugging and code documentation skills have provided result oriented solutions to my team. TECHNICAL SKILLS Programming Language: Core Java, C, C++, SQL, PL/SQL Java/J2EE Technologies: Servlets, JSP, JSTL, JDBC, JMS, JNDI, RMI, EJB, Swing, AWT, Applets, Multi-threading, Java Networking Java Frameworks: Spring MVC, Struts 2.0, JSF Application/Web Servers: WebLogic, IBM WebSphere, JBoss, Tomcat ORM Frameworks: Hibernate, JSF, iBatis Web Technologies: JSP, JavaScript, JQuery, AJAX, XML, XSLT, XHTML, DHTML, CSS, SASS, LESS, HTML, AngularJS, React JS, Ext JS, backbone JS. Spring Framework: Spring IOC, Spring Batch, Spring Boot, Spring Security Database Server: Oracle, DB2, SQL Server, MySQL, RDBMS, MongoDB, Cassandra IDE: Eclipse, RAD, WSAD, NetBeans Web Services: REST, SOAP, JAX-WS, JAX-RPC, JAX-RS, WSDL,Axis2, UDDI, Apache CXF Version Control: GIT, CVS, SVN Build Tools: ANT, Maven, Gradle, Grunt, Gulp Methodologies: Agile, Scrum, Water-Fall, Rapid Application Development Modeling Tools: Microsoft Visio, Rational Rose Operating System: Windows, Linux, UNIX Tools: Apache Camel, ESB, cucumber, redhat BPM Testing: JUnit, Jasmine, Karma, Protractor, Mockito, Selenium, Jenkins, Docker PROFESSIONAL EXPERIENCE Confidential, Irving, TX Sr. Full Stack Java Developer Responsibilities: Involved in requirements gathering and analysis from teh existing system. Captured requirements using Use Cases and Sequence Diagrams. Worked as a part of Agile Software Development Methodology including Scrum technology. Used JavaScript and jQuery for validating teh input given to teh user interface Implement teh web application using technologies MongoDB, HapiJS, Angular 5, Node.js along with HTML5, CSS3, JavaScript, jQuery, Bootstrap and other web technologies. Migrated teh code from Angular 4 to Angular 5 to make teh compilation faster, build optimization, to make teh application support for multiple export alias. Developed several services in Angular 5 and shared them among different components using teh dependency injection. Created custom directives in Angular 5 for reusable components (directive for browser controls like: disable right click, browser close, and lock screen while transition, multifield form elements, back ground file uploads etc.). Tested Angular 5 with Jasmine and karma testing frameworks. Developed application from scratch including Mongo DB server setup and Hapi-JS server development. Developed REST services using Node-JS, Hapi-JS, Body-Parser, Mongoose, and other node modules to serve teh web application with JSON data Worked with HTTP/HTTPS protocols by using Angular 5 components to build microservices in Node JS. Used HapiJS middleware to provide response to HTTP requests and also to send status codes to teh browser. Extensively used promises (Success and Error) while making sync communication. Wrote services with Angular 5 to store and retrieve user data from teh Mongo DB for teh application on devices with teh Http service. Used Mocha (a JavaScript test framework) to write teh tests at server side and used Jasmine on teh client side. Used Mongoose API in order to access teh Mongo DB from Node JS and used Angular CLI and NPM for scaffolding teh Angular 5 Application. Used Mongoose ORM to map JavaScript objects to MongoDB. Used Continuous delivery / Continuous Integration (CD/CI) tools Docker, Jenkins to deploy this application to AWS. Used GIT for Version Control of code for incremental development and day-to-day basis to maintain teh code history. Used Postman tool to test teh API workflow tested on teh JSON files which are generated by teh NodeJS, Hapi JS Building cloud Microservices and implemented back-end using Spring Boot. Worked with Microservice architecture using Spring Boot to modularized code and implemented Rest API’s using Spring Rest Integrated Swagger API for Spring Boot documentation. Performed teh code building using MAVEN. Made enhancements to existing CSS and DIV tags, made upgrades using Twitter Bootstrap model. Used Firebug, Firebug Lite, and IE Developer Toolbar, for debugging and browser compatibility Enhanced website by creating presenting new static model pages and presenting it to senior management for attracting teh customers and existing users. Experience in Docker Engine and Docker Machine environment, to deploy teh micro services-oriented environments for scalable application, Created a new cluster and container management tool using Kubernetes for Zero downtime Deployment. Created instances for AWS EC2 and created AWS s3 buckets to monitor teh access to teh hosted files. Developed Microservices using Spring Cloud Netflix OSS stack to address Load balancing using Ribbon, API Gateway using Zuul. Used Netflix OSS to allow application to change its properties Dynamically after teh deployment Implemented Kibana for centralized logging and monitoring dat builds on Elasticsearch upon MongoDB for analytics and visualization of teh user’s login User authentication is done through JSON Web Tokens (JWT). Developed teh functionalities under Agile Methodology, JIRA processes and used JIRA for task assignment, bug tracking and fixture. Used Log4js for automated logging of error messages. Environment: HTML5, CSS, Angular4, J Query, Angular5, NodeJS, Express JS, JWT, JIRA, GIT, HTTP/HTTPS, Firebug, Jasmine, Mocha, AWS EC2, AWS S3, Postman, Log4js, kubernetes, kibana (ELK), Spring Boot, swagger API, Agile Methodology, Mongoose ORM, MongoDB, Docker. Confidential, San Francisco, CA Full Stack Java Developer Responsibilities: Developed user interface with HTML5, CSS3, LESS, JSON, AJAX, React JS and on server side technology with Node JS. Responsible to Style, look and feel of teh web page with LESS dat extends CSS with dynamic behavior such as variable, mixing, operations and functions. Analyzed business requirements to translate functional requirements into technical requirements and developed web application using MongoDB, Express, React.js/Redux and Node.js (MERN stack). Implemented Reactjs with Redux architecture for fetching asynchronous data from teh RESTful webservices. Worked in using React JS components of NPM (Node packaging manager) such as Forms, Events, Keys, Router, Animations, and Flux concept. Responsible for React UI and architecture, building components library, including Tree, Slide-View and Table Grid. Used React Axios service (React-Router technique) to retrieve data from server simultaneously in teh background without interfering teh display and existing page in an interactive way. Several view components of ReactJS where managed using WebPack build tool. Navigation capabilities of application are implemented using React Router module. Developed few Microservices using Node.js for this microservice architecture based application. Developed back-end components, connect teh application with teh other web services, and support teh front-end developers by integrating work with teh Node JS application. Integrated Express.js framework to handle teh views, requests, routing and organize teh web application into MVC architecture on Node.js server. Configured Express.js to set up middle-wares to respond to HTTP requests and created RESTful API with Node.js. These Node.js microservices were then put into teh Docker container for continuous integration testing. Implemented Node.js Logging to discover teh errors and to see if teh services are running properly. Developed unit test cases using Mocha and Chai as unit test runner to test various ReactJS components. Used Spring Boot which removes boilerplate configuration and makes application faster. Used Spring Boot properties like actuators and health checkers to enhance micro service implementations. Implemented enterprise micro services using Spring Boot architectural patters. Implemented Spring Boot to create aCRUD backend for our React-fronted application. Developed RESTful web service using Spring Boot to teh underlying Agent Services API and Implemented RESTful web services. Bottle micro-framework implemented with RESTful service and used WADL (Web Application Description Language) for modelling teh resources provided by teh services and relationships between them. Modules for teh Front-end are integrated to Back-end using Hibernate framework. Configured JBOSS Application server and used Oracle database with Hibernate ORM framework and used teh functionalities of Hibernate’s second level EHCache. Implemented Node.js server-side code along with Express framework to interact with MongoDB to store and retrieve data by using teh Mongoose Connector package. Worked with Streams, lambda functional programming using Java 8. Implemented Netflix Zuul API gateway for all teh requests from teh devices and websites by registering services to Eureka. Used Apache Kafka (Message Queues) for reliable and asynchronous exchange of important information between multiple business applications. Installed Spring Boot application using Docker into Pivotal cloud foundry. Worked on Pivotal Cloud Foundry to host Application which used to role-based access controls, applying, enforcing roles and permissions to ensure dat users can only view and effect teh spaces for which they have been granted access. Re-architect monolithic service into micro services-based architecture using spring boot and pivotal cloud foundry. Worked on teh Splunk architecture and various components (indexer, forwarder, search head, deployment server), Universal and Heavy forwarder. Kubernetes is configured in teh application for automating deployment, scaling, and management of containerized applications. Implemented JWT (JSON Web Tokens) for creating tokens to assert claims in teh application and thus providing authentication of RESTful services. Performed unit testing using Junit, continuous integration and deployment of applications using Jenkins& debugging through Log4j. Wrote build and deployment scripts using Gradle and CVS for version control. Environment: HTML5, CSS3, LESS, JSON, AJAX, Bootstrap, React.JS, Redux, Spring Boot, Hibernate, Node JS, Express JS, NPM, JWT, Netflix Zuul API, Eureka, Docker, Apache Kafka, Splunk, NoSQL, Mongo DB, Oracle, Mocha, Chai, Junit, Log4j,Jenkins, Gradle, CVN. Confidential, St.Louis, MO  Java/UI Developer Responsibilities: Involved various phases of Software Development Life Cycle (SDLC) of teh application like requirement gathering, Analysis, Design and implementation using Agile methodologies. Extensively used Angular JS, Jquery, HTML5, CSS3, and Bootstrap for creating dynamic web pages for enhanced user experience. Implemented AngularJS client-side form validation, format view results using various controls and filters. Used features in Angular JS such as data binding, ng-route for routing, custom filters, and custom directives to meet business requirements. Implemented service calls with dependency injection to prevent scope conflict commonly found with JavaScript using AngularJS. Performed Angular JS end to end testing using Protractor framework Called RESTful web services through Angular JS Services to get JSON object and modified teh response object to display in UI. Used Spring MVC to consume RESTful web services and created views using AngularJS to display data front end. Implemented Spring MVC framework using Maven Build tool for creating web Application. Expert at Spring MVC framework using hibernate and annotations. Implemented Separate controller per form using Spring MVC components like Dispatch servlet, view resolver and Request mapping annotations. Created Restful APIs using Apache-CFX and deployed in remote servers and communicated using WADL. Extensive experience in developing batch jobs using open source framework like Spring Batch framework. Created spring batch jobs for reliability, robustness and essential automatic processing using Spring Batch. Used Spring Batch to develop batch processing to handle bulk requests from teh clients. Used Hibernate, object relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with a SQL-based schema. Worked with Drools to provide Business Rules Management System (BRMS) solution dat provides a core Business Rules Engine. Experience in using Mule soft which is light weight Java based Enterprise Service Bus (ESB) which allows connecting applications together quickly and easily, enabling them to exchange data. Extensively used Hibernate ORM in data access layer to write DAOs. Developed Hibernate mapping and Configuration files. Worked on Spring Security for application authentication and Modifying teh Spring MVC, REST Controllers and Services classes as part offspring framework. Implemented Java Messaging Service (JMS) - IBM MQ Series provides independent and potentially non-concurrent applications on a distributed system to communicate with each other, Used to achieve Service Oriented Architecture (SOA). Designed and implemented scalable, secure cloud architecture based on Amazon Web Services (AWS). Implemented authentication feature to teh RESTful web services using OAuth security framework. Used ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX. Tested teh application after making teh necessary configuration. Monitored teh error logs using Log4J and fixing teh problems using Junit and Mockito extensively for testing. Involved in running Selenium automation scripts and updating teh scripts according to enhanced requirements using Selenium WebDriver. Used GIT a Source Code Management to maintain and manage teh branches with issue tracking features. Environment: Angular JS, HTML5, CSS3, AJAX, Bootstrap, JSON, JMS, Spring MVC, Maven, SOA architecture, Spring Security, Spring batch, Drools, ESB, Hibernate, Oracle, Restful services, Apache-CFX, WADL, ANT, IBM WebSphere, IBM MQ, Junit, Mockito, Protractor, Selenium, Git. Confidential, Bloomington, IL Java Developer Responsibilities: Involved in analysis, specification, design, implementation and testing phases of Software Development Life Cycle (SDLC) based on teh functional requirements. Followed Agile Software Development Methodology and Test Driven Development (TDD) to build teh application iteratively and incrementally. Participated in scrum related activities and Daily Scrum Meetings. Developed Customer GUI using HTML, CSS, LESS, JavaScript, Bootstrap, JSON, AJAX, Jquery and Backbone JS to simplify teh complexities of teh application and to create single page application. Created several models with key-value binding, custom events, views, and declarative event handling using BackboneJS framework. BackboneJS used for creating single page application using a RESTful JSON interface service. Backbone JS communicates via events and halps to develop fast application and easily maintainable code. Implementing teh Backbone JS and Spring MVC framework for data access. SOAP web services were developed in a top-down approach using hibernate and Oracle and teh clients were generated with JAX-WS Designed and developedSpringBatchApplications to read data from flat files and databases. Usedspringbatchframework to update data in databases. Usedspringbatchframework to create custom readers and writers to work with teh application. Implemented JavaEE components using Spring IOC (Dependency Injection), Spring Transactions and Spring security models. Created spring batch jobs for reliability, robustness and essential automatic processing using Spring Batch. Used Spring Batch to develop batch processing to handle bulk requests from teh clients. Used Spring Batch as spring batch jobs can meet teh requirements of reliability, robustness, and traceability, which are essential for automatic processing of large amount of data. Extensive experience in developing batch jobs using open source framework like Spring Batch framework. Developed application using Frameworks Spring MVC, Spring IOC, Spring AOP. Segregated functionality related to caching usingSpringAOP and EHCache framework using hibernate. Used Spring Security for user Authentication and authorization. Extensively worked on Jersey for creating REST API’s services. Responsible for writing/reviewing server-side code using IBatis and DAO Framework for executing stored procedures and complicated SQL queries. Created Data Access Objects to fetch data from database and integrate them with IBatis. Implemented Web service calls using SOAP (JAX-WS frameworks) Used Apache Camel for messaging technology glue with routing. It joins together messaging start and end points allowing teh transference of messages from different sources to different destinations. Used Mockito for unit tests development of Test-driven Development (TDD). Used version control repository SVN (Subversion by apache) and JIRA for issue tracking. Developed automation test cases using Java and selenium on Eclipse for web 2.0 Ajax application Used Apache Maven build tool to automate teh build process and JenkinsCI for continuous integration. Environment: HTML, CSS, LESS, JavaScript, JSON, AJAX, JQuery, Bootstrap, Backbone JS, Spring MVC, Spring IOC, Spring AOP, Spring Security, Spring Batch, Jersey, iBATIS, MySQL, SOAP, JAX-WS, Apache Maven, Jenkins, SVN Confidential Java Developer Responsibilities: Involved in requirements gathering and validating functional specifications. Followed agile methodology. Implemented teh Model View Control (MVC) design pattern with Struts, JSP and Servlets to control teh flow of teh application in teh Presentation/Web tier. Used Struts framework along with JSP, HTML, CSS and JavaScript to construct teh dynamic web pages (presentation layer) for teh application. Performed Validation (Client Side & Server side) with teh halp of Struts Validation Frame Work. Used Rational Rose to design UML diagrams (Use Case Diagrams, Class diagrams and Sequence diagrams). Consistently produced teh highest quality code through disciplined and rigorous unit testing and integration testing. Work involved extensive usage of HTML, CSS, JQuery, JavaScript and Ajax for client side development and validations Struts framework is halpful to manage teh objects and exposing teh services to presentation layer. As ORM framework JPA is used for handling Oracle database by configuring and passing queries. EJB was implemented as middleware and XML and servlet in teh presentation layer. Develop and execute Unit Test plans using JUnit, ensuring dat results are documented and reviewed with Quality Assurance teams responsible for integrated testing. Used SVN for version controlling and Eclipse as IDE Worked closely with teh Business/Users team in translating technical requirements into application code Developed web layer using Struts framework to manage teh project in MVC pattern. Used Struts Tiles Framework for designing teh layout of teh application. Extensively worked on java concepts such as OOP, Exceptional handling and Collection framework. Responsible for teh overall layout design dat meet cross-device compatibility using Bootstrap. For extracting data from source developed a UNIX shell scripting. These implemented UNIX shell scripts to call stored procedures to extract data and place it in database. Scheme of teh web site using HTML, and CSS and Responsible for creating detailed wire frames and process flows Designed dynamic and multi-browser compatible pages using HTML, CSS, JQuery and JavaScript Environment: Struts, Servlets, Collection, Shell Scripting, EJB, JPA, SVN, XML, CSS, JavaScript, SOAP Web Services, Oracle, Rational Rose, HTML, JUnit. Confidential Jr. Java Developer Responsibilities: Involved in analysis and design of teh application. Involved in preparing teh detailed design document for teh project. Developed teh web applications using Core Java concepts like threads and Collections. Used threading concept programming like wait, notify and sleep. Involved in developing JSP forms. Designed and developed web pages using HTML and JSP. Designed various applets using JBuilder. Designed and developed Servlets to communicate between presentation and business layer. Used EJB as a middleware in developing a three-tier distributed application. Developed Session Beans and Entity beans to business and data process. Used JMS in teh project for sending and receiving teh messages on teh queue. Developed teh Servlets for processing teh data on teh server. Teh processed data is transferred to teh database through Entity Bean. Used JDBC for database connectivity with MySQL Server. Used CVS for version control. Involved in unit testing using Junit. Environment: JSP, Servlets, EJB, JDBC, JBuilder, Swing, JavaScript, JMS, HTML, CSS, MySQL, CVS, JUnit, Collection, Multi-Threading. 