SUMMARY Steadfast and propelled Engineering Graduate with monumental noledge in Cloud Computing, is in a quest of DevOps Engineer position, in an organization where he can enhance and employ his entire skillset while contributing to self and organizational growth. Is an entice team player and Cloud Computing enthusiast. TECHNICAL SKILLS Build/Automation Tools:  Ansible, Ant, Maven, Jenkins, Terraform, Docker, Kubernetes. Scripting/Languages:  Shell, Bash. Monitoring Tools:  SonarQube Programming Languages:  Python and Shell script. Bug Tracking Tools:  JIRA, Redmine. Web/App server:  Apache Tomcat, Nginx, HA Proxy, WebSphere Application Server, JBoss. Version Control Tools:  GIT, BitBucket, GITLAB. Operating Systems:  RHEL/CentOS 5.x/6.x/7, Ubuntu and Windows. PROFESSIONAL EXPERIENCE DevOps Engineer Confidential, Seattle, WA Responsibilities: Good Experience in Github, Confidential Interface. Working with Detection Team, creating Infrastructure in AWS Env, using Ansible (Configuration Management tool) and Terraform (Iac) Configured Collectd, and sending service level Metrics to CloudWatch In all the 500+ Instances using Ansible Roles Sending 10 Million Metrics per day to CloudWatch using Collectd and CloudWatch Agent Deploying Cluster Stack DEV, TEST, PRD Environments in AWS, using Terraform and Ansible. Created a Jenkins Docker container, running periodically Jobs to Update Dev and Test Cluster, and Email Alerts for Build Success and Fails. Configured Logrotate for Log Management in all the Environments using Ansible. Good Experience on Ansible, creating different services eg: Zookeeper, Collectd, Logstash. Using Logstash, sending service level logs and system logs to Splunk. Monitor patrol alarm and logs for optimal performance. Setup jobs for cleanup logs and auto reset using logrotate. Sending all services level and system metrics to Argus using collectd and creating Alarmâ€™s in GOC++ for all DEV, TEST, PRD. Installing in flock in all the environments, preventing multiple concurrent ansible runs. Installing RAID0 using Ansible to Splunk Indexers Volumes and Data rebalancing in Splunk Indexers. Environment: AWS, Jenkins, Git, NGINX, Agile/Scrum, Ansible, SDLC, Docker, Windows, Terraform, Splunk, Linux, Argus, Grafana. DevOps Engineer Confidential, Seattle, WA Responsibilities: Experience in maintainingAtlassianproducts like JIRA, Confluence, Bitbucket etc. Working with Dev Team, creating Infrastructure for Spark and Hadoop Cluster setup in AWS. Configured Spark and Hadoop Cluster in Docker Containers for PPD and PRD Environment. Good Experience using SonarQube, for Code Quality and Code Coverage. Working on Code Quality for Scala and Good experience in other Programming Languages like Java, C, C#, Perl, Python, JS using Sonar - Scanner and Sonar Scanner MSBuild. Experienced with installation ofAWSCLI to control variousAWSservices through SHELL/BASH scripting. Worked on various operating systems like Linux, RHEL, Ubuntu, Windows, CentOS. Involved in the functional usage and gained working noledge of web servers like Tomcat, HTTP, Nginx. Good Experience on CI/CD Pipeline, every tool will be automated triggered using Jenkinsfile. Experience in Deploying, Jar in the destination cluster. Good experience on Blue and Green Deployment Written Chef Cookbook, recipes to automate installation of Middleware Infrastructure like Apache Tomcat, JDK and configuration tasks for new environments etc. Configuring and maintaining Chef Master Server, creating modules and pushing them to chef clients. Took Part inDevOpsimplementation pilot program and was trained inDevops methodologies and tools like Chef, Jenkins etc. Possess high working qualities with good interpersonal skills, high motivation, fast learner, good team player and very proactive in problem solving to provide best solutions. Environment: AWS, SBT, Jenkins, Git, NGINX, Agile/Scrum, Ansible, SDLC, Docker, Windows, Terraform, Kubernetes, Linux, Grafana, ELK, chef, SonarQube. DevOps Engineer Confidential, Boise, ID Responsibilities: Experience in maintainingAtlassianproducts like JIRA, Confluence, Bitbucket etc. Add testing to the ansible execution. Run the scripts from both the develop and master branches automatically via a Jenkins CI pipeline. Manage the configurations of multiple servers usingAnsible. Solicited experience in managing task automation withAnsiblecontrol servers and installing services, RPM Packages, Apache. Setup/teardown ofELKstack (Elasticsearch Logstash, Kibana) for OSS functional testing. Installed, configured and managed theELK(Elastic Search, Log stash and Kibana) for Log management Configured theELKstack for Jenkins logs, and syslog's and network packets using the beats plugins like Filebeat. Resolved crucial issues related to Linux server, chef and monitoring for Dev environments. Install the open source data ingest from Isilon utilization metrics into an influx to present at a high level on the Grafana dashboard. Adding, Retention Policies to InfluxDB Migrating Grafana from one server to another, backend InfluxDB. Redirecting all sources for RPMs to the Companies production Artifactory. The yum repos should not point to any external endpoints. So, me have created additional Artifactory repos created and the ansible repo setup URLs to be changed. Used SonarQube for code coverage and code quality. Created Maven POMs to automate build process for the new projects and integrated them with third party tools like SonarQube. Configure ansible playbook such dat sonar scanner is installed via yum on hosts in the 'dev' role. Execute ansible on Jenkins hosts such dat they will have sonar scanner properly installed. Responsible for installing and administrating the SonarQube for code quality check and generating reports for different projects. Also, integrated them into Jenkins. Helped to understand the process of SonarQube through Presentations and other business value measurement. Environment: AWS, Jenkins, Git, Docker, SonarQube, Agile/Scrum, Ansible, SDLC, Docker, Windows, Splunk, Linux, Grafana. AWS / DevOps Engineer Confidential, Orlando, FL Responsibilities: Supporting engineering plans and schedules by providing CM/Release Engineering services to build, deploy, develop scripts, oversee branch and merge strategies, and build automated tools as necessary to offer services to engineering team. Helped developers and other project teams to set views and environments. Created and applied Baselines and Labels for each Build Artifacts. Used Terraform to map more complex dependencies and identify network issue. Hands on experience on Terraform a tool for building, changing, and versioning infrastructure safely and efficiently. Worked with Terraform key features such as Infrastructure as code, Execution plans, Resource Graphs, Change Automation Created UCM Projects, Development and Integration views for Development and Integration Streams. Worked with Terraform to create AWS components like EC2, IAM, VPC, ELB, Security groups. Involved in AWS EC2/VPC/S3/SQS/SNS based on automation Terraform, Ansible, Python, Bash Scripts. Managed different infrastructure resources, like physical machines, VMs and even Docker containers using Terraform It supports different Cloud service providers like AWS and Digital Ocean. launched different EC2 instances in Virtual private cloud (VPC) in different subnets, attached ACL's at subnet level and security groups at instance level, configured Route Tables & NAT and Internet Gateways, Elastic Load Balancers (ELB) and Auto scaling groups in Production environment. Migrate many applications into AWS and provide cloud Security Communication with team members for both Ansible Core and AnsibleTower teams to clarify requirements and overcome obstacles. Responsible for the EBFs (Emergency Bug Fixes) to push them to different environments and monitor their status. Performed merges for each build from Development Branch to Integration Branch. Created the Release Management plan with the implementation schedule. Worked with the automated scripts for the Build and Deployment of the applications. Responsible for Build and Install Schedules using Unix Cron jobs. Maintained configuration files for each application for build and install on different environments. Created the build instructions docs and install (deploy) instructions docs for each application for different environments. Environment: AWS, SBT, Jenkins, Git, NGINX, Agile/Scrum, Terraform, AWS, Ansible, Linux, ELK, SonarQube. Confidential DevOps Engineer Responsibilities: Worked as a DevOps Engineer, to build a CI/CD whole pipeline using various DevOps tools namely Jenkins, Docker, AWS, Kubernetes, Ansible. Achieved successful builds by administrating and managing Jenkins and integrated Maven, Selenium, Docker, and One-Artifactory to build, test, containerize, and store. Automated the build by polling to the code repositories and managed version control using GIT. Responsible for building the artifacts and containerized the application using Docker, automated using Jenkins and a Docker file. Configured Jenkins to integrate tools (Maven, Git, Docker, Ansible, Kubernetes) to accomplish the goal and notify the status of the build by creating and mailing the reports to the members of team. Deployed and orchestrated containerized application using Docker-Compose and Kubernetes which we created and managed using AWS. Implemented AWS solutions using EC2, S3, RDS, EBS, Elastic Load Balancer, Auto scaling groups. Participated in the installation of multi-node Oracle 11g databases on Linux OS and configured RDS. Architected a Lamp Stack application in AWS using VPC, Route 53, Elastic Beanstalk, SQS, SNS, and RDS MySQL. Defined AWS Security Groups which acted as virtual firewalls dat controlled the traffic allowed reaching one or more AWS EC2, Lambda instances. Monitored a high availability and scalable AWS stacks using EC2 auto scaling functionality. Monitored tagging standards for proper identification and ownership of EC2 instances and other AWS resources. Achieved desired state of systems by managing and configuring them by using Ansible. Environment: AWS, Linux, Jenkins, Docker, GIT, Kubernetes, Ansible. 