SUMMARY IT Professional with 8+ years of experience in the field of DevOps, AWS Cloud, Software Development Lifecycle, Linux Administration, including but not limited to Cloud orchestration & Infrastructure Management, Automation, CI/CD, Build & Release Management and Artifacts Deployment. Well versed in working effectively with the project teams operating under different silos and delivering an integrated and automated environment for the complete SDLC. Experience in working on DevOps Environment, Associated Tools and Setting up the Enterprise Infrastructure on Amazon Web Services (AWS) Cloud using VPC, EC2 instance, IAM, S3 Bucket, ELB, Auto Scaling, AMI, RDS, Cloud Front services & CloudWatch, and Azure Cloud as well. Worked with ELBs and Auto scaling to design fault tolerant, cost effective and highly available systems Architected secure VPC solutions inAWSwith the help of Network ACLs, Security Groups, Public and Private Network Configurations. Experience in setting up Databases inAWSusing RDS, storage using S3 buckets and configuring instance backups to S3 bucket to ensure fault tolerance and high availability. Managed IAM policies inAWSto define groups, create users, assign roles and define rules for role - based access toAWSresources and to integrate the Active Directory with IAM. Created Highly Robust, Scalable, Fault-Tolerant, and Disaster-Prone AWS environment with Multi-Region and Multi-AZ deployment. Worked on Jenkins, Bamboo for Continuous Integration, Continuous Deployment and End to End automation for all build, package, release, archiver and deployment stages. Experience in building CI/CD pipeline, upstream/ downstream projects, multi-branch pipelines with the help of Jenkins and setting up Maven/ANT repositories and to automate everyday builds. Experience working on Docker environment, creating docker file, image, containers. Experience in SCM workflows and maintaining the version across the environments using Git Experience in Splunk including Configuration, Monitoring, Trouble-Shooting and Overall Maintenance of Splunk Experienced with setting up Ansible Engine and Agentless Architecture and defining the inventory Managing EBS Volume Snapshots, Creating Image and cross region management. Integrated AWSCLI with Ansible to provision and manage AWS infrastructure Experience in working on Agile best practices, TDD (Test Driven Development) and Test Strategy documents Worked on Chef environment including Chef-DK, Chef Server and bootstrapping Chef Clients Created and managed chef cookbooks to manage the configuration as well as using knife utility, bootstrapping new nodes, mirroring them to the existing oneâ€™s by executing the run lists with required cookbooks Worked on Docker containers to provision a secure and isolated environment to run the applications Created custom Docker files, building docker images, registering docker images, running Docker containers and Orchestrating containers using Kubernetes & ECS. Worked on Terraform templates and scripts to provision and manage Azure & AWS Infrastructure Experience in Python and Shell Scripting for automation, build and deployment process TECHNICAL SKILLS CI/CD Tools: : Jenkins Configuration Management: : Chef, Puppet, Ansible Binary Repository Managers: : Nexus, Artifactory Cloud Services, Orchestration Tools: : AWS (EC2, ELB, Autoscaling), Cloud Formation, Terraform Container Services & Management: : Docker, ECS, Kubernetes Version Control: : GIT, GitHub, Gitlab, SVN, Bitbucket Programming, Scripting Languages: : HTML, CSS, Java Script, PHP, Python, Shell Scripting Databases: : MYSQL, SQL Server, PostgreSQL, MongoDB Operating Systems: : Linux (Centos, RHEL, Ubuntu), Windows, Mac OS Build Tools: : MAVEN, ANT, NPM, Gradle Web and Application servers: : Apache Tomcat, Nginx, Web logic, WebSphere Code Quality, Monitoring Tools: : SonarQube, JIRA, Splunk, Nagios, Amazon CloudWatch, CloudTrail PROFESSIONAL EXPERIENCE Confidential, Richmond, VA DevOps Cloud Engineer Responsibilities: Managing the overall team Non-Prod & Prod Operations including but not limited to AWS Infrastructure management, RDS Postgres and apache superset dashboard operations. Created Highly Available & Fault tolerant architecture for AWS Infrastructure, as well as created backup & disaster recovery strategy for RDS using Multi-AZ & read replica in different AWS region. Monitoring different logs using CloudWatch for ensuring high availability for SAM Infrastructure. Managing the ECS Cluster with docker containers for different services, consuming messages such as windows event logs, combined procs, docker via SDP (Kafka - East & West Region) Creating Stored Procedures, Materialized Views and managing the database archival strategy in RDS Postgres Troubleshooting issues related to the Service downtime, RDS Database, ECS Cluster, EC2 Instances, ELB, Autoscaling, lambda function and apache superset. Doing Instance Rehydration with latest Amazon Machine Image in Prod & Non-Prod Environment Worked on Error logs Automation by integrating Slack webhook with python scripts, to get the job status notifications on our custom channel. Worked on Error Handling & Portal Error automation for the python scripts that updates the dashboards Worked on Non-Prod & Prod build & deployment of Amazon Machine Image (AMI), Azure Cloud and Google Cloud base images, Custom & third-party images to 250+ Confidential Accounts Worked on AWS Architecture Design & performed custom Security groups deployment using nimbus cli Managing AWS EC2 Launch template for Instance Rehydration and Infrastructure Management Monitoring CloudWatch logs for API pulls via Lambda functions Integrated Slack notifications for python scripts loads that run via ECS Scheduled tasks Worked on ELB, Autoscaling groups to manage the highly available & fault tolerant architecture Implementing bi-weekly and monthly build & deployment of Amazon machine images and Azure, Google Cloud platform respectively to the development (DEV) & quality assurance (QA) environment and then finally to production account for the final release using the Jenkins pipeline. Troubleshooting non prod & prod deployment issues related to Jenkins pipeline, AWS Infrastructure. Handling different requests such as Custom AMI and ensuring the compliance & vulnerability reports are clean, before processing the final deployment Worked on different OS build & deployment such as RHEL7, Ubuntu18, AmazonLinux2 etc. Updating AMI Tracker with the OS type, Release Version and the compliance & vulnerability reports Providing support for AMI build process, as well as after deployment operational support for any issues related to the deployed Image. Confidential, NJ DevOps Engineer Responsibilities: Managing the design, development and maintenance of the SaaS platform Working on a Scaled Agile Framework with routine scrum meetings, planning and grooming activities Architect new features and enhancements for the application platform Partner with the product team and other stakeholders to meet immediate and longer-term objectives Implementing AWS resources such as VPC, IAM, EC2, EBS, S3, RDS, IAM, ELB, Autoscaling, CloudWatch Working with AWS CloudWatch and CloudTrail for monitoring & auditing the overall AWS Infrastructure Managing Ansible playbooks, static & dynamic inventory and automated Existing cloud environment. Managed configurations of multiple servers using Ansible playbooks with multiple modules. Automating services and applications deployment with Ansible. Maintain and track Ansible inventory for the dynamically changing infrastructure Setting up the CI/CD pipeline using Jenkins, Maven, Nexus, GitHub, Ansible andAWS Focus on continuous integration and deployment, promoting Enterprise Solutions to target environments. Established processes and tools to maintain code base integrity, including check-in validation rules and branch/merge processes. Created custom Docker images and tagging using Docker file and pushing the images to Docker Registry. Developed and managed Docker-compose files to define and run multiple containers from a single file to manage interconnected applications in different containers. Installed, Configured and Maintained Kubernetes master and minions to deploy and maintain a set of applications and services as Docker containers in Pods and Deployments. Managed the bugs and changes into the production environment using JIRA tracking tool. Working with other members of the development team to design, develop and implement features, bugfixes, and other improvements for the application Confidential, Cary, NC DevOps Engineer Responsibilities: Managed different aspects of Jenkins for the overall Automation Framework. Implemented a Continuous Delivery framework using Jenkins, Maven, Chef & Nexus. Responsible for creating branches and resolving the conflicts while merging in Git. Used Maven as a build tool on java projects for the building of deployable artifacts (war and ear) Integrated GIT with Jenkins to automate the code checkout process. Used Jenkins for continuous integration and Jenkins Master Slave Architecture to run Jenkins build. Worked with docker files, images & containers. Managed Chef Server/Workstation/Node utilizing Cookbooks. Developed Chef Recipes for automating the Infrastructure, deployment process. Responsible for creating various Cloud Watch alarms integrated with Amazon Simple Notification Service (SNS) Application Installation on AWS EC2 instances, Managing & Storing data on EBS & S3 buckets. Configuring AWS S3 and their life cycle policies and to backup files and archive files in Amazon Glacier. Written templates for AWS infrastructure as a code using Terraform to build staging and production environments. Worked on AWS infrastructure automation through Terraform, Ansible, Python, Bash scripts. Worked on setting up Terraform continuous build integration system. Used Jenkins with Ansible playbooks to run the deployment process and used S3 buckets to manage document management and RDS to host database. Confidential  DevOps Engineer Responsibilities: Managing AWS services with different tools for cloud infrastructure & automation Creating alarms in Cloud Watch service for monitoring the server performance, CPU Utilization, disk usage etc. Used AWS Simple Notification Service (SNS) and Simple Email Service (SES) for notifying the developers and sending the high volumes email efficiently. Created Snapshots of EBS Volumes and Amazon Machine Images (AMI's) of EC2 Instance Designed AWS Security Groups which acts as a virtual firewall at the instance level, to ensure that only allowed traffic reaches the EC2 instances Built and managed deployment of Linux instances systems with Puppet automation Setting up the CI/CD pipeline using Jenkins, Maven, Nexus, GitHub, Terraform and AWS Used Ansible as the Configuration Management tool and composed Ansible Playbooks to avoid configuration drift using multiple modules Used Nagios for monitoring the system problems across all the servers and networking devices Created Jenkins jobs to automate the build and the deployment process. Worked with container technologies and deployed containerized software on Docker. Closely worked with Developers and Analysts to address project requirements, and effectively managed multiple projects based on the project prioritization parameter. Confidential Build & Release Engineer Responsibilities: Designed and implemented Continuous Integration process using tools like Jenkins with approval from development and other involved teams. Defined processes to build and deliver software baselines for internal as well as external customers. Participated in weekly release meetings with technology stakeholders to identify and mitigate potential risks associated with the releases. Developed utilities for developers to check the checkouts, elements modified based on project and branch. Created Subversion configuration record for builds using derived objects generated during build audit process. Provided end-user training for all Subversion (SVN) users to effectively use the tool. Worked on Creating and deleting dynamic views for developers as requested by user. Proposed branching strategies and implemented it. Designed CM processes and policies with approval from development and other affected teams. Defined processes to build and deliver software baselines for internal as well as external customers. Developed and supported the Software Release Management and procedures. Worked on Installation and Implementation of Ansible configuration management system and used to manage Web applications, Environments configuration Files, Users, Mount points and Packages Implemented and maintained the branching and build/release strategies utilizing GitHub. Confidential Linux System Engineer Responsibilities: Administering, installing, configuring and maintenance of Linux Servers. Linux systems management including Firmware Upgrades, patching, configuration management, user management, security and performance tuning on Centos, RHEL, Ubuntu. Monitoring system activities to optimize performance and implementing security management. Installing, upgrading and managing packages via RPM and YUM package management. Managing Apache, Tomcat on Linux production servers. Managing Patches configuration, version control, service pack, connection & security Manages systems routine backup, scheduling jobs and enabling Cron jobs. Responsible for overall System Administration including tasks such as System Builds, Installation, Upgrades, Patches, Troubleshooting, Security, systems routine backup, scheduling jobs, enabling Cron jobs, enabling system logging and network logging of servers for maintenance. Creation of Logical Volume Manager for Linux operating systems. Performing different supporting tasks including, but not limited to code deployment, managing source control systems, virtual servers, scripting, etc. Provided Technical support in debugging and fixing issues related to Linux Servers, Installation/Maintenance of Software in Production, Development & Test Environment