SUMMARY: Working Experience on Azure Cloud Services (PaaS & IaaS),Azure Storage, SQLAzure and in different PaaS Solutions with web, and worker roles and AzureWeb Apps, Azure Active Directory, Azure DevTest Labs, Application Insights, and Logic Apps. Experience in configuring Azure web apps, Azure App services, Azure Application insights, Azure Application gateway, Azure DNS, Azure Traffic manager, Analyzing Azure Networks with Azure Network Watcher, implementing Azure Site Recovery, Azure stack, Azure Backup and Azure Automation. Created Azure Services with Virtual Machine. Involved in developing the Azure Solution and Services like IaaS and PaaS. Managed Azure Infrastructure Web Roles, Worker Roles, Storage, AzureAD Licenses, Office365. Created Cache Memory on WindowsAzure to improve the performance of data transfer between SQLAzure and WCF services. Hands on experience with AzureVPN Point-to-Site, virtual networks,Azurecustom security, end security and firewall. Used Azure Express Route to set up a private connection to Microsoft cloud services such as a MicrosoftAzure, Office 365, and Dynamic 365. Experience in migrating infrastructure and application from on premise to Azure, from Cloud to Cloud such as AWS to Microsoft Azure, and migrating on-premises virtual machines to AzureResource Manager Subscription with AzureSite Recovery and used virtual Machine Backup and Recover from a Recovery Services Vault using Arm templates, AzurePowerShell and Portal. Expertise in automating, configuring and deploying instances onAzure, AWS, Rackspace cloude nvironments and Data centers with in depth knowledge on ELK (Elastic search, LogstashandKibana) Stacks. Expertise in writing AWS CloudFormation templates in JSON to use them as blueprints for building & deploying multiple AWS resources, also worked on Kinesis Data Streams, Kinesis Firehouse, and integrated with AWS Lambda for serverless data collection and experience in creating and designing AWS Cloud Formation templates to create custom sized VPC, NAT subnets for deployment of web applications and database templates. Extensive experience in Server infrastructure development onAWSCloud by using AWS services likeEC2, ECS, EBS, ELB, Lambda, S3, AMI, Auto Scaling, RDS, Glacier, DynamoDB, VPC, Route53, Cloud Watch, Cloud Formation, Cloud Trail, OPS Work, Security Groups, IAM, Certificate Manager, SNSin a scalable production environment. Expertise in automating deployments, scaling, and operations of application containers across clusters of hosts, provided container-centric infrastructure by Kubernetes. Used Jenkins and pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes, created Pods and managed using Kubernetes. Extensive Knowledge on launching and scaling Docker containers in production using Docker swarm, Apache Mesos, Marathon and creating Nodes and Pods in Kubernetes in production. Deploying and maintaining multi-container applications through Docker, orchestrated containerized application using Docker-Compose and Kubernetes. Expertise with orchestration of Docker images and containers using Kubernetes by creating master and node, and Docker images using a Docker file, worked on container snapshots, removing images and managing Docker volumes. Experience on Ansible and Ansible Tower to automate repetitive tasks, to deploy critical applications quickly, and proactively manage the changes and wrote many playbooks to manage web applications. Experience in using Terraform and Ansible, migrating legacy and monolithic systems to Azure and managing Ubuntu, Amazon Linux and RHEL virtual servers on Azure EC2 instance by creating Ansible nodes. Expertise in using Chef attributes, Chef templates, Chef recipes and Chef files for managing the configurations across various nodes, build, design and maintain the platform automation using Chef and involved in setting up Chef workstation, nodes, cookbooks, and recipes using ruby scripting. Experience in using Jenkins as Code Deploy plugin to deploy to Azure and extensively worked on other tools like Bamboo, Hudson, Cruise Control for continuous integration, and for all end to end automation functions with build and deployments. Experience in writing groovy scripts for Continuous integration, build workflows in Jenkins pipeline, and used Jenkins for uploading Artifacts into Nexus repository and automated various day-to-day administration tasks by developing Bash, Ruby, JSON, Perl, PowerShell and Python Scripts. Expertise in load balancing and monitoring with Nagios and Splunk, ELK. Implemented ELK stack (Elastic Search, Logstash and Kibana) for log indexing. Experience in working on version control systems like Subversion and GIT, Clear Case, Stash used source code management client tools like Visual SVN, Tortoise SVN, Stash, Source Tree, GIT Bash, GitHub, GIT GUI and other command line applications etc. Experience in upgrading and migrating various versions of Mongo database on different platforms and installing multi-data center and multi-rack Cassandra cluster. Experience in JIRA for ticketing and as well as defect tracking system and configure various workflows, customizations and plug-ins for JIRA bug/issue tracker, integrated Jenkins with JIRA, GitHub, Maven. Experience in all phases of Software Development Life Cycle (SDLC) with focus on the build and release of quality software and good at Waterfall Model, Agile Methodology (Scrum and Kanban). Experience in installing, configuring, supporting, and troubleshooting Unix/Linux networking services and protocols like TCP, SMTP, HTTP, SNMP, NIS, NIS+, OSPF, LDAP, DNS, NFS, DHCP, NAS, FTP, SSH, and SAMBA. Expertise in dealing with Linux utilities: KICKSTART, SSH, FTP, quota management, wrappers, user management, process management, memory management, and text processing tools. Log management, package management, disk management and swap partition/files management. TECHNICAL SKILLS: Operating System: Redhat Linux, Ubuntu, CentOS, Solaris, Windows, Mac OS X Automation and Configuration Management Tools: Jenkins, Chef, Ansible, Ant, Maven, Docker, Kubernetes, Kickstart, Terraform Cloud Services: Amazon Web Services: EC2, S3, ELB, RDS, VPC, Direct Connect, Route 53, Cloud Trail, IAM, SNS, SQS, SWF,Azure, OpenStack Version control tools: GIT, Bit Buket, Subversion (SVN) Database System: MS SQL Server, MySQL, MongoDB, Cassandra DB Application and Web servers: Apache Tomcat, JBoss, Web Logic, Web Sphere Scripting: Perl, Python, Javascript, Ruby, Bash shell, Power Shell scripting Virtualization Technologies: VMware, Windows Hyper-V, Xen, Virtual Box, Power VM Monitoring Tools: Nagios, Splunk, Cloudwatch, ELK Programming Languages: C, Java, Python, Ruby Web Programming: HTML, Javascript, CSS, AJAX PROFESSIONAL EXPERIENCE: Sr. Cloud/DevOps Engineer Confidential, New York Responsibilities: Set up private connections using Azure Route Express, to Microsoft cloud services such as a MicrosoftAzure and Dynamic 365. ConfiguredAzure Virtual Networks, subnets, DHCP address blocks,Azure network settings, DNS settings, security policies and routing. Azure API Management, Security, Cloud-to-Cloud Integration (Public, Private). Build Data Sync job on WindowsAzure to synchronize data from SQL 2012 databases to SQLAzure. Azure IoT hub, event hub, service bus and integration patterns. Developed a conical map/reduce-like architectural pattern that is designed to leverage theAzure platform. Worked on POC to migrate to WindowsAzure to address scalability and performance issues and Implemented high availability withAzure Classic andAzure Resource Manager deployment models. Used Azure Kubernetes service to deploy a managed Kubernetes cluster in Azure and created an AKS cluster in the Azure portal, with the Azure CLI, also used template driven deployment options such as Resource Manager templates and Terraform. Deployed Azure Kubernetes Service cluster into an existing virtual network and to on-premises networks over ExpressRoute or site-to-site (S2S) VPN connections. Also, worked seamlessly with Azure Kubernetes Service management tools such as Helm, Draft, and the Kubernetes extension for Visual Studio Code. Managed host Kubernetes environment, making it quick and easy to deploy and manage containerized applications without container orchestration expertise. Configured applications that run multi-container Docker applications by utilizing the Docker-Compose tool which uses a file configured in YAML format. Used Kubernetes to manage containerized applications using its nodes, Config-Maps, selector services and deployed application containers as Pods. Worked with Terraform Templates to automate the Azure IaaS virtual machines using Terraform modules and deployed virtual machine scale sets in a production environment and implemented Terraform Enterprise to provision infrastructure across Azure workloads and Kubernetes clusters. Designed strategies for optimizing all aspects of the continuous integration, release and deployment processes using container and virtualization techniques like Docker and Kubernetes. Built Docker containers using microservices project and deploy to Developer team. Installed Docker Registry for local upload and download of Docker images and from Docker Hub and created Docker files to automate the process of capturing and using the images. Worked on Ansible Playbooks with Ansible roles and created inventory in Ansible for automating the continuous deployment. Configured the servers, deployed software, and orchestrated continuous deployments or zero downtime rolling updates. Implemented Ansible Tower for managing complex network deployments by adding control, knowledge and delegation to Ansible powered environments. Wrote Ansible playbooks using Python SSH as wrapper for managing configurations of servers, nodes, test playbooks on Azureinstances using Python. Automated various infrastructure activities like continuous deployment, application server setup, Stack monitoring using Ansible Playbooks and integrated Ansible with Jenkins. Created Ansible cloud modules for interacting with Azure services which provides the tools to easily create and orchestrate infrastructure on Azure and automated cloud-native applications in Azure using Azure microservices such asAzure functionsand Kubernetes on Azure. Designed and Set-Up the Splunk Architecture in the organization and created applications on Splunk to analyze the Big Data and wrote code to develop and maintain systems which power Splunk multi-tenant services hosted in the public cloud. Created a resource group, storage account, and Azure Files in cloud Shell using PowerShell. Created Power Shell scripts to automate the Azure Cloud system creation including end-to-end infrastructure, VM’s, storage, firewall rules. Used Git as a source code manager, SonarQube for code review, Git repository hosting, bug tracking, project management, team collaboration tool. Configured and managed an ELK stack, set up the elastic search ELK Stack to collect search and analyze log files from across the servers and integration of application with monitoring tool New Relic for complete insight and proactive monitoring. Determined ways to optimize/improve JIRA and JIRA Agile setup and process workflows, as well as identify where functionality can/cannot meet user requests. Installed and configured SQL Server database as well as designed and implemented database and procedures for capturing build and test metrics. Implemented Ansible playbooks for automated orchestration of Cassandra clusters and worked on upgrading Cassandra from old 2.x to 3.0 version. Worked on web servers such as APACHE HTTP server, NGINX, Apache TOMCAT and application servers such as Oracle WebLogic 9.x, 10.x, IBM WebSphere 6.x, 7.x, 8.x, JBoss 4.1. Developed Python, Perl and shell/bash scripts for TC Server/Tomcat web application servers and automation of the build and release process and to automate certain processes for the smooth process of build tool like Maven. Performed OS installations, OS Upgrades, & Server Patching by configuring PXE & DHCP server using Kickstart & Jumpstart scripts on Red Hat Linux 5.x, 6.x & 7.x. Environment & Tools: Azure (Web Roles, Worker Roles, SQL Azure, Azure Storage, Azure AD, Resource Groups, Office365, RBAC), OpenStack, Chef 13.x/12.x, Ansible 2.4, Docker 1.13.1/1.12.6, Kubernetes 1.8/1.7, Jenkins 2.10x, GIT-2.1x/2.x, Python 3.6, Jira 6.4 Cloud/DevOps Engineer Confidential, Bentonville, Arkansas Responsibilities: Designed and maintained application deployment AWS infrastructure utilizing services such as EC2, RDS, VPC and managed network and security, Route 53, Direct Connect, IAM, Cloud Formation, AWS Ops Works (automate operations), Elastic Beanstalk, AWS S3, Amazon Glacier, (storage in the cloud) and Cloud Watch monitoring management. Worked on utilizing CloudWatch to monitor resources such as EC2, Amazon RDS DB services, Dynamo DB tables, to set alarms for notifications or automated actions and to monitor logs for a better understanding and operation of the system. Worked on AWS Lambda to run the code in response to events, such as changes to data in an Amazon S3 bucket, Amazon DynamoDB table, HTTP requests using AWS API Gateway and invoked the code using API calls made using AWS SDKs. Configured and maintained servers using Terraform for provisioning and involved in architecting, building and maintaining highly available secure multi-zone AWScloud infrastructure utilizing Chef with AWSCloud Formation and Jenkins for continuous integration. Worked on Terraform for automating VPCs, ELBs, security groups, SQS queues, S3 buckets, and continuing to replace the rest of our infrastructure and managed different infrastructure resources Cloud, VMware, Bare Metal Servers, and Docker containers. Implemented Terraform Enterprise to Provision Infrastructure across AWS and Kubernetes Clusters. Utilized Kubernetes for the runtime environment of the CI/CD system to build, test, deploy and used Jenkins pipelines to drive all microservices builds out to the Docker registry and then deployed to Kubernetes, created and managed Pods using Kubernetes. Integrated Jenkins with Docker container using CloudBees Docker pipeline plugin to drive all microservices builds out to the Docker Registry and then deployed to Kubernetes. Integrated Selenium automation regression test suite in Jenkins build pipeline. Configured clusters with Docker containers using AWS Elastic Container Registry (ECR), Elastic Container Services (ECS) to automate the CI/CD process on high scalable environment. Written Chef Cookbook, recipes to automate installation of Middleware Infrastructure like Apache Tomcat, JDK and configuration tasks for new environments and managed many servers in Chef with different operating systems like SUSE, RedHat, Windows and involved in developing manifests. Deployed and configured Elasticsearch, Logstash and Kibana (ELK) for log analytics, full text search, application monitoring in integration with AWS Lambda and CloudWatch using Chef. Worked with Chef to automate various aspects of Jenkins such as automating Jenkins job creation, plugin installation and global settings etc. Automated testing builds and deployment by developing and maintaining the process, associated scripts/tools. Implemented continuous integration using Jenkins master and slave configuration. Configured security to Jenkins and added multiple nodes for continuous deployments. Worked on Jenkins for enterprise scale infrastructure configuration and application deployments & checking out the code from GIT and use Maven to build Jar, War, Tar and Ear artifacts. Also, provisioned web servers in AWS and DNS route53 records. Worked on MongoDB and MS SQL Server DB tasks (DML, DDL Executions, Log Rotations, Table space alterations, user management etc.). Designed and built deployment using ANT/ Shell scripting and automate overall process using SUBVERSION and MAVEN. Managing batch jobs in Unix for data automated import/export of data and system automation programming using Perl, Bash, Shell scripting and automated log backup using Python Boto3 API. Designed, configured and implemented Nagios to monitor run scripts remotely via Nagios Remote Plugin Executor. Generated reports using JIRA for creating projects, assigning permissions to users and groups for the project and created mail handlers and notifications schemes for JIRA. Day to day duties for Unix/Linux server Maintenance and support to developer's team for their issues with the application, tuning, troubleshooting, software running on Servers. Performed NIC bonding/NIC Teaming configuration in Linux/UNIX/Windows/VMware systems to increase the bandwidth or redundancy based on the requirement by the application. Environment & Tools: AWS EC2, S3, VPC, Route 53, CloudFormation, Docker, Kubernetes, Chef, Terraform, Maven, Jenkins, GIT, JIRA, Nagios, RHEL, CentOS, RAID, Shell scripting, Python Scripting and Perl scripting. DevOps Administrator Confidential, Tampa, FL  Responsibilities: Worked in AWS environment, instrumental in utilizing compute services (EC2, ELB), storage services (S3, Elastic Block Storage), Elastic Beanstalk, VPC, SNS, IAM. Supported AWS cloud environment with AWS instances and configured Elastic IP and Elastic storage. Cloud and system virtualization platforms and tools (AWS, VMWare, Docker, Vagrant). Planned, deployed, monitored, and maintained Amazon AWS cloud infrastructure consisting of multiple EC2 nodes and VMWare virtual machines as required in the environment. Created S3 buckets, IAM role based polices and assigned to cloud instances. Created Python scripts to totally automate AWS services which includes web servers, ELB, Cloud Front distribution, database, EC2 and database security groups and application configuration, this script creates stacks, single servers, or joins web servers to stacks. Created infrastructure in a coded manner (Infrastructure as code) using Chef for configuration management of virtual environments, and Vagrant for virtual machine and resource control. Deployed and configured Chef Server including bootstrapping of Chef Client nodes for provisioning. Worked on documentation - Chef basics, initial setup of Chef, Data bags implementation, Coding standards, Cookbook document, Testing docs. Created Terraform templates for provisioning virtual networks, subnets, VM Scale sets, load balancers and NAT rules Designed DevOps workflow for multiple applications by orchestrating Test, Build, Release and Deploy phases through various CI/CD pipelines using Git, Jenkins, Chef and build the deliverable artifacts using Maven as a build tool in Jenkins for Java applications and deploy them to various environments. Maintained artifacts in binary repositories using JFrog Artifactory and pushed new artifacts by configuring the Jenkins project JenkinsArtifactoryplugin. Developed, evaluated and documented the installation of Splunk for management purpose. Created alerts, Schedule searches and Dashboards using Post Process Search in Splunk. Loaded data sources into Splunk including Syslog and log files. Monitored and troubleshoot network in Linux and Windows servers using Splunk. Automated Java Builds with ANT and implemented multiple plugins for Code analysis, Junit, Code coverage, PMD, SonarQube, etc. Installed and administered Artifactory repository to deploy the artifacts generated by ANT. Developed build and deployment scripts using ANT as build tool and automated the build and deploy processes using Jenkins to move from one environment to other environments. I wrote the Ansible playbooks which is the entry point for Ansible provisioning, where the automation is defined through tasks using YAML format and run Ansible Scripts to provision Dev servers. Maintained Bitbucket repositories which includes Jenkins and JIRA Integration, creating new repositories, enabling GIT to ignore, branching, merging, creating pull requests and the access control strategies from Bitbucket. Involved in Building and configuring Red Hat Linux Servers using Kickstart for the project and maintained maximum uptime, performance for enterprise production, QA and UAT staging. Performed NIC bonding/NIC Teaming configuration in Linux/UNIX/Windows/VMware systems to increase the bandwidth or redundancy based on the requirement by the application. Environment & Tools: Puppet, Chef, ANT, Jenkins, Apache Tomcat, Subversion, GIT, SVN, JIRA, Nagios, Splunk, RHEL, CentOSKickstart, Shell scripting, Python Scripting and Perl scripting. Build and Release Engineer Confidential Responsibilities: As a member of the Release Engineering group, redefined processes and implemented tools for software builds, patch creation, source control, release tracking and reporting on LINUX platform, led Jenkins continuous integration server installation and configuration for all GIT Repositories. Configured Jenkins to build Java Code using Meta Case Software and done continuous integration process on the Java code generated and used MAVEN to automate the build process. Configured and automated the Jenkins Build jobs for Continuous Integration. Troubleshoot the build issue during the Jenkins build process. Provided continuous improvement to agile software development teams by working with Jenkins under the CI/CD pipeline. Integrated Ant, Nexus, Jenkins, SVN, Confluence, JIRA and used Git with Jenkins to integrate and automate the code checkout process. Integration of Puppet with Apache and developed load testing and monitoring suites in Python. Maintained multiple modules in Puppet by converting production support scripts to Puppet Manifests to automate the configurations in servers. Worked on GIT which includes creating new users, Branching, Merging the changes and writing some pre-commit & post-commit hook scripts. Integrated GIT into the continuous Integration (CI) environment along with Anthill-Pro, Jenkins. Wrote shell scripts and automated creating projects in Jenkins and Nexus repository as part of release process and implemented continuous integration and continuous delivery framework using GitHub, Jenkins, Maven, Nexus and Puppet. Integrated Bitbucket with JIRA for transition JIRA issues from within Bitbucket Server and monitored the JIRA issues in Bitbucket Server. Implemented and configured Nagios for continuous monitoring of applications in the production environment and enabled notifications via emails and text messages. Administered and maintained source control management systems, such as SVN. Managed Maven project dependencies by creating parent-child relationships between projects. Integrating the code quality analysis tools like Find Bugs, JUnit, PMD, and Check style into the projects. Involved in building and configuring Red Hat Linux servers using Kick Start server as required for the project. Maintained maximum uptime and maximum performance capacity for enterprise production, QA and UAT/staging. Performed configuration of standard Linux and network protocols, such as SMTP, DHCP, DNS, LDAP, NFS, SMTP, HTTP, SNMP. Environment & Tools: Java/J2ee, Ant, Maven, Subversion, UNIX, SVN, VMware, Virtual box Windows, Chef, CVS, GIT, Remedy, Tomcat, Jenkins, PL SQL, Python, Perl. Linux Administrator Confidential Responsibilities: Provisioned Linux and Windows VM’s on KVM Hypervisor and monitored them. Solved problems related VMware tools running on Linux OS such that there are no compatibility issues with the applications used on premises. Performed network monitoring, provided analysis using various tools like air-mon, TCP dump and Wireshark. Implementation of automatic SSH login into remote Linux servers and apply the required modifications, user and group administration. Created various CRON jobs with shell/bash scripts to automate the administrative tasks like taking backups, applying updates based on schedule and maintained version control using GIT repository. Monitoring disk utilization, server performance and swap space management, CPU utilization and transferring files from on premise to a remote location using FTP and SFTP in Linux environment. Monitored system performance parameters using Top, VmStat, Htop, iotop, iostat Linux commands. Configured Logical Storage Manager (LSM) for root disk encapsulation and implemented root disk mirroring for fault tolerance. Monitored and resolved infrastructure and applications on multiple servers using Nagios for issues related to network, CPU load, memory usage and disk I/O. Configured kickstart server for updating and applying patches to the Linux servers using RedHat Satellite server. Environment & Tools: RedHat, Nagios, Shell Scripts, Apache Tomcat, Virtualization, Linux, Splunk, DNS, FTP, Oracle, WebSphere, SSH. System Administrator Confidential Responsibilities: Performed bare metal installation and configuration of VMware Hypervisor on 64-bit servers and installed & configured Samba on RedHat and Linux for sharing with windows clients. Installed, configured and troubleshoot TCP/IP, DHCP, DNS, NFS, CIFS, NTP and Samba servers on different multi-platforms (Windows, Linux). Local and remote administering of servers, routers and networks using Telnet and SSH login using SSH keygen tools for password-less setup and agent forwarding on Linux. Used bash and Perl scripting for automated processes in managing disk space, deleting old logs, and CRON jobs toperformbackups using local archiving utilities using tar, gzip, and bzip2. Configured LDAP on RedHat for authorization and authentication by configuring LDAP server which is used for authentication using its database. Created Self-Signed certificate authority to sign certificate requests for SSL and configured secure talk for LDAP, https, and SMTP. Wrote shell scripts to automate the periodic tasks like removing old logs and files, applying patches and making backup and recovery. Environment & Tools: RedHat Enterprise Linux, Logical Volume Manager for Linux and VMware, Hyper-V Manager VMware vSphere Client, Citrix Xen. 