SUMMARY Overall 9 years of experience in DevOpspractices like Continuous Integration, Continuous Deployment, Cloud Management and Linux/Unix administration Build and Release Management. Involved in various stages of Software Development Life Cycle (SDLC) including analysis, requirement gathering, Design, Development, Testing, Deployment and Maintenance of DevOps applications. Handled architecting and building solutions leveraging DevOps tools such as Git, Maven, Jenkins, Docker, Ansible, and Chef etc. Experience wif AWS Cloud services like EC2, VPC, ELB, Auto - Scaling, Security Groups, Route53, IAM, EBS, AMI, EFS, RDS, S3, SNS, SQS, CloudWatch, CloudFormation, CloudFront, CloudTrail, Lambda & Direct Connect. Good at managing and hosting plans for Azure Infrastructure, implementing and deploying workloads on Azure virtual machines (VMs) Extensively worked on Continuous Integration (CI) and Continuous Deployment (CD) pipelines and workflow integration for automated builds using Hudson/Jenkins and Bamboo. Experienced in build tools like Maven, Ant & Gradle for building the deployable artifacts from source code. Expertise in using Repository Managers like Nexus to store the Artifacts. Implemented Ansible to manage servers and automate the build and configuration of new servers. Worked wif Ansibleplaybooks for virtual and physical instance provisioning, configuration management, patching and software deployment. Designed an end to end automation and continuous deliver of application by integrating AWS cloud, Jenkins and Chef. Performed Continuous Delivery in a microservice infrastructure wif AWS cloud, Docker and Kubernetes. Involved in defining application deployment solution on Docker based PaaS environment and migrating applications to Kubernetes and docker platform. Experience wif container based Virtualized deployments using Docker, wif Docker images, Docker Hub and Docker registries. Worked wif Kubernetes to manage containerized applications using its nodes, ConfigMaps, selector, Service and deployed application containers as pods. Experience using Kubernetes for container management that runs Docker containerized applications in a cluster of EC2 instances in Linux Environment. Worked wif Terraform key features such as infrastructure as a code, execution plans, resource graphs, change automation and used auto scaling launch configuration templates for launching AWS EC2 instances. Experience on building and deploying various JAR, WAR, EAR applications. Experienced in Server monitoring, capacity planning, application monitoring wif the help of Nagios, Cloud Watch and Splunk. Good experience in design and development of builds, scripts (Shell, Bash, Perl scripting) and systems including source code control and issue tracking. Strong hands on experience in scripting languages such as Groovy, Yaml, JSON, Shell scripting. Experience wif working on Linux System wif good programming languages such as Python, Bash, Shell. Skill of database technology like SQL, PLSQL, MySQL, RDS including NoSQL (DynamoDB) databases. Experience in integrating code quality tools such as SonarQube, Veracode in CI/CD pipelines. Worked wif different Bug tracking tools like JIRA, Bugzilla, and Remedy etc. Experience on building and deploying Java web applications in Apache Tomcat Server. Good experience designing and implementing performance tests. Ability to quickly understand, learn and implement the new system design, new technologies, data models and functional components of software system in a professional work environment. Able to build solid relationships wifin as well as consensus across multiple teams on environment strategies of build and release process. Strong attitude towards enhancing and learning new technologies. Good Interpersonal Skills, team-working attitude, takes initiatives and very proactive in solving problems and providing best solutions. TECHNICAL SKILLS Cloud Technologies: AWS, Azure, GCP. Web Servers: Apache, Tomcat, WebLogic, WebSphere. Application Servers: Nginix, JBOSS. Virtualization: VMware, vSphere and vSphere 5Citrix. SDLC: Agile, Scrum. Version Control Tools: Subversion (SVN), GIT Hub, Git Lab, Bitbucket. Build Tools: ANT, MAVEN, Gradle. CI Tools: Jenkins, Bamboo, Hudson. Configuration Management tools: Chef, Puppet, Ansible. Orchestration Tools: Kubernetes, Docker, and Apache Mesos. Infrastructure: Terraform. Database: Oracle, MySQL, MongoDB, SQL Server. Ticketing & Tracking Tools: JIRA, Remedy, ServiceNow. Monitoring Tools: Nagios, Cloud Watch, Splunk. Languages/Scripts: C, HTML, Shell, Bash, Python, Ruby, Perl and Power Shell. Operating Systems: Redhat, Ubuntu, Linux, Windows, CentOS. PROFESSIONAL EXPERIENCE Confidential, Sunnyvale, CA Cloud/DevOps Engineer Responsibilities: Worked wif various services in AWS such as EC2, Elastic Beanstalk, ELB, Route53, S3, Cloud Front, SNS, RDS, IAM, Cloud Watch and Cloud Formation. Created monitors, alarms and notifications for EC2 hosts using Cloud Watch. Designed AWS Cloud Formation templates to create custom sized VPC, Subnets, NAT Gateways to ensure successful deployment of Web applications and database templates. Worked on creating S3 buckets and Glacier vaults for archive and backup uses. Created AWS Launch configurations based on customized AMI and use dis launch configuration to configure auto scaling groups and Implemented AWS solutions using EC2, S3, RDS, DynamoDB, Route53, Elastic Load Balancer, Auto scaling groups. Maintained and developed infrastructure using Ansible, Jenkins, and multiple AWS tools. Used Ansible Tower, which provides an easy-to-use dashboard and role-based access control, so that it's easier to allow individual teams access to use Ansible for their deployments. Provisioned the highly available EC2 Instances using Terraform and CloudFormation on AWS. Worked on Docker hub, creating Docker images and handling multiple images for installations and domain configurations. Researched and implemented new tools such as Kubernetes wif Docker to assist wif auto-scaling, continuous integration, rolling updates wif no downtime. Developed Cluster container environment in AWS using Docker and Kubernetes to manage dozens of Microservices. Used Kubernetes to orchestrate the deployment, scaling and management of Docker Containers. Maintaining Kubernetes cluster supporting ingress controller wif Amazon EKS and updating the running cluster. Created infrastructure for many clusters of different instances as per components in cluster using terraform for creating multiple EC2 instances and attaching volumes using EBS service. Worked on Splunk platform to manage the AWS instances and monitor the generic data on S3 buckets. Involved in Configuration Automation and Centralized management wif Ansible and Implemented Ansible Playbooks to manage all existing servers and automate build/configuration of new servers. Worked on deployment automation of all the Microservices to pull images from private Docker registry and deploy to Docker swam cluster using Ansible. Involved in Jira as bug tracking system and configured various workflows, customizations and plug-ins for Jira bug/issue tracker and integration of Jenkins wif Jira/GitHub. Implemented a continuous delivery framework using JENKINS, CHEF, and MAVEN in Linux environment. Configured Nagios to monitor EC2 Linux instances. Worked on Building and Deploying various code through Jenkins and Developed Maven scripts to automate build process. Worked on JIRA as ticket tracking and work flow tool. Worked on customization of existing Python scripts of some of the internal applications and Worked on writing multiple Python, Ruby and Shell scripts for various companywide tasks. Environment: AWS, Redhat, Linux servers, Jenkins, GIT, Chef, Docker, Java, Hive, microservices, Terraform, Shell Scripting, Ansible, Tomcat, Python, ANT, Maven, Kubernetes, CentOS, JIRA, Clear case, Splunk. Confidential, McLean, VA DevOps Engineer Responsibilities: Worked wif AWS services like Glacier, ELB (Elastic Load Balancer), RDS, SNS, SWF, Lambda, IAM and hands on experience wif Amazon Web Services provision. Worked on managing DNS zones using Route 53 and gave public DNS names to elastic load - balancers. Designed AWS Cloud Formation template to create custom sized VPC, Subnets, NAT to ensure successful deployment of web applications and database templates. Worked on Elastic Beans talk for quick deployment of services like EC2 Instances, Load Balancer and databases on AWS environment. Worked on creating Docker Containers and Docker registry for managing the application life cycle. Developed Docker containers for testing the selenium scripts for the admin console and successfully integrated the automated tests on Docker for performing Continuous Integration. Used MySQL, DynamoDB and elastic cache to perform basic Data Base administration. Worked on Docker container snapshots, attaching to a running container, removing images and managing containers. Experience in using Cloud Formation templates to provision and auto deploy EC2instances and integrated wif Chef Recipes to deploy web services. Managed to develop a Continuous Deployment/Continuous Integration environment using GIT, Bitbucket, Jenkins, Chef, Maven and Docker to complete automation from commit to deployment. Worked on JIRA wif Jenkins to automate the weekly build process. Used JIRA workflows to automate deployment and issue tracking. Integrate wif Jenkins for CI/CD pipeline wif GIT. Created build and deployment jobs in Jenkins for various components. Worked on creating python scripts to deploy applications from Jenkins to remote server. Configured, installed and maintained Nginx web server. Managed extensive use of Ansible, GIT to manage build/deploy tasks including continuous integration. Worked on uploading code in GitHub and generating build number using Team city. Worked on version control tools like GIT, Subversion and software build tools like Maven to enable continuous delivery into several environments of development, test and production. Able to create Python and Bash scripts for system administration and automation like transferring files among servers. Environment: AWS, Redhat, CloudWatch, TeamCity, Linux servers, Jenkins, GIT, Chef, Docker, Shell Scripting, Ansible, Tomcat, Python, Ruby, Bash, ANT, Maven, Java, JIRA, CentOS, Nginx, MySQL, DynamoDB. Confidential Build & Release Engineer Responsibilities: Managed Git repository, code merging, and production deployments. Coordinate/assist developers wif establishing, applying appropriate branching, labeling/naming conventions using Subversion, Git source control. Maintained build related scripts developed in shell for Maven builds. Created and modified build configuration files including POM.xml. Worked recently on tools migration from old tools like PVCS (version control system) to SVN, Tracker to Jira and finally CI tool Hudson to Jenkins. Partially worked as build tools administrator (SVN, Jira, and Jenkins). Worked on management tools like Ansible, Nagios, Git, GitHub, Bitbucket and Jenkins for CI CD. Setup full CI/CD pipelines so that each commit a developer makes will go through standard process of software lifecycle and gets tested well enough before it can make it to the production. Implemented Ansible playbooks to Install, configure and maintain web servers like Apache Web Server, nginx. Wrote Ansible playbooks, the entry point of Ansible provisioning, where the automation is defined in tasks using YAML. Ran Ansible scripts to provision Dev servers. Handle Load balancing and monitoring wif Nagios. Used Ansible inventories to define groups of hosts. Configured different Environments to specified state using Ansible playbooks and Ansible Vault in Playbooks to protect sensitive data. Worked and helped to improve Continuous Delivery framework to streamline releases and reliability. Deployed the java applications into Apache Tomcat Application Servers. Writing Maven pom.xml and Ant build.xml for build scripts. Executed user administration and maintenance tasks including creating users and groups. Utilized WAR and JAR files for deployment of enterprise apps. Managed Nexus Maven repositories to download the artifacts during the build. Created and maintained the Shell deployment scripts for Web Logic Web Applications servers. Monitoring Live Traffic, logs, Memory utilization, Disk utilization and various other factors which are important for deployment. Environment: GIT, Maven, Jenkins, Ansible, Chef, Nagios, Python, Shell Scripts, Unix/ Linux environment. Confidential Build & Release Engineer Responsibilities: Responsible for design and maintenance of the Subversion Repositories, views, and the access control strategies. Integrated Subversion for automating builds wif Jenkins. Managed the Subversion branching strategy for a few applications by creating Release branches, Development branches thus ensuring the integrity of Trunk. Efficiently performed the task of resolving conflicts while merging in Subversion wif the J2EE development background. Used ANT to perform daily and weekly Software Builds. Created various modules and Manifests in Ansible to automate various applications Implemented a Continuous Delivery framework using Jenkins, Ansible, Maven in Linux environment Installed, administered and configured Team Forge, Jenkins for Continuous Integration Builds, automated deployments and Notifications. Used Ansible Python Script to generate inventory and push the deployment. Researched and recommended open source tools, practices, and methodologies that enhance our day to day productivity. Written Puppet modules for installing and managing Java versions and managing persistent SSH tunnels. Environment: Svn, Git, Maven, Ant, Jenkins, Ansible, Python, Shell Confidential Linux Administrator Responsibilities: Installed and configured servers wif Redhat 4, Centos, Fedora Kickstart installations and RPM package management. Provided day-to-day user administration like adding/deleting users and managing user's queries. Analyzing and monitoring System performance through various system tools such as netstat, iostat, sar & top Configured NIS, NFS, Http, CUPS, Samba, DHCP, NAT, Primary Secondary and cache-only DNS servers File system management and consistency checks using df, du, e2fsck, mount Disk usage monitoring, administering and implementing disk quotas. Extensively worked in troubleshooting the hardware and software issues Configured multi-tier parent/child relationship squid web caching system Extensively worked on software and hardware raid on Red Hat Linux machines. Extensive knowledge in configuring Samba and NFS for the sharing of files Involved in writing shell scripts for monitoring system usage, backup and recovery strategies, automation of jobs, adding new services to the system. Researched and implemented a disaster recovery plan. Environment: RedHat Linux, RHEL, Fedora Core Linux, CentOS, DELL PowerEdge, Dell, HP Hardware. 