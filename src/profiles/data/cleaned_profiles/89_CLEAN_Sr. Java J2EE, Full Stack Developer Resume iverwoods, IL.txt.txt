SUMMARY Result driven IT Professional with 8+ years of experience in development and implementation of applications using Java and J2EE technologies. Strong experience on multi - tiered distributed environment and OOAD Concepts with good understanding of Software Development Lifecycle (SDLC) and familiarity of Service Oriented Architecture (SOA). Expert in methodologies like Agile, SCRUM, TDD, Waterfall, Scrum, Iteration and Pair Programming. Proficient in developing UML/Visio diagrams using case tools like Enterprise Architect, Visio and Rational Rose. Strong experience in Spring Framework modules such as Spring MVC, IOC, AOP, JDBC, JTA, IO, Spring Boot, Spring Micro services, Spring REST, Spring Eureka, Spring Ribbon, Spring Netflix, Spring Zuul. Experience in design patterns such as Session Facade, Business Delegate, Adaptor, Bean Factory and Singleton and Front Controller, Data Access Object, Service Locator, MVC, Data Transfer Object. Experience in developing Web based UI’s using JSP, HTML, DHTML, CSS, JavaScript (and its frameworks like JSON), AngularJS, Action Script, DOJO, jQuery, Backbone JS, Bootstrap, EXT JS and Ajax. Experience in Full stack UI technologies using GruntJS, Gulp Server for Angular. Experience in working with Spring JDBC Templates, JMS Templates, Spring EAI and Spring Rest Templates. Strong understanding of Microservices Design Patterns Circuit Breaker/Hystrix, DTD, Aggregator and Proxy Chaining. Expertise in application development using JSP, Servlets, JDBC, JNDI, Spring, Hibernate, IBatis, MyBatis, JSF, EJB, XML, Web Services, WSDL, Struts, Spring 3.x/4.x, Boot, AWS, JDBC, JNDI, JMS, JAXB and SAX/DOM. Expertise in XML technologies like XSL, XSLT, XPATH and parsers like JAXP (SAX, DOM) and JAXB. Expertise in implementing Web services, Micro Services, AWS, Docker and JMS for the synchronous and asynchronous communications between two applications running in different servers. Good knowledge of using Cloud Foundry (CF) CLI for deploying applications and other CF management activities. Proficient in using Amazon Web Services AWS. Extensive experience focusing on services like EC2, VPC, Cloud Watch, Cloud Front, Cloud Formation, IAM, S3, Amazon RDS, Elastic Cache, SNS, SQS. Experience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries. Experience in writing SQL, PL/SQL and DB2 programming. Good Working knowledge of ANT, MAVEN, Gradle and Log4J. Experience in creating Asynchronous Messaging configuration in Tomcat, WebLogic and web sphere Servers. Ability to communicate TEMPeffectively with all levels of the organization such as technical, management and customers and presented technical designs and strategies through daily operations meetings. TECHNICAL SKILLS Java/J2EE Technologies:  Servlets, JSP, JSTL, JDBC, JMS, JNDI, RMI, EJB, JFC/Swing, Applets, Multi-threading Programming Languages:  Java JDK 1.4/1.5/1.6/1.7/1.8 , SQL, PL/SQL Application/Web Servers:  IBMWebSphere 5.1/6.0/6.1/7.0 , Jboss6.x/7.x, Tomcat 5.0/6.0/7.0/8.5/9 , Jenkins Frameworks:  Struts 2.x/1.x, Spring 3.x/ 2.x, Hibernate 3.x, JSF 1.2/2.0, IBatis, Flex UI Frameworks:  jQuery, AngularJS, Bootstrap IDEs:  Eclipse 3.x, IntelliJ, WebStorm Web technologies:  HTML/HTML5, CSS/CSS3, XHTML, JavaScript, Ajax, jQuery, AngularJS, JSON Web Services:  JAX-WS, JAX-RPC, JAX-RS, SOAP, REST, SOAP UI Methodologies:  Agile, Scrum, TDD, OOAD, SDLC Testing technologies/tools:  JUnit JMeter, Selenium, Mockito Databases:  Oracle 8i/9i/10g/11G/12C, DB2, SQL Server 2000/2005/2008 , MySQL, MongoDB Version Control:  CVS, SVN, Git, GITHUB Build Tools:  ANT, Maven, Gradle Messaging Tools:  JMS, Rabbit MQ, Apache Kafka Platforms:  LINUX, UNIX, Windows OS PROFESSIONAL EXPERIENCE Confidential - Riverwoods, IL Sr. Java/J2EE, Full Stack Developer Responsibilities: Used Agile methodology followed by SCRUM process Sprints and daily Stand up meetings Developed UI pages with JSP, Spring MVC, HTML5, CSS3, JavaScript, JQuery, and used Bootstrap for creating Responsive Web pages, themes and templates. Implemented Synchronization with the halp of Angular Data binding concept and displayed data with the halp of binding controllers in the UI and worked with Angular JS Filters, Services and Directives (Structural, Attribute). Used React JS Flux for unidirectional call back registrations and ReactJS hot re-loader by making use of WebPack. Involved in usingReactJScomponents, Forms, Events, Keys, Router, Animations Used customNode.js proxy to simulate API responses before client implementation was complete, and to proxy requests to finished client APIs, handling authentication, custom headers, virtual application root, etc Created high-performance and animation timelines through Angular Intuitive API and used Angular 2 templates to describe how components are rendered to the page. Created Restful web services using Spring MVC REST annotations & used JACKSON based REST-JSON convertors Developed Application to fetch response from Restful webservice from consumer side using Angular.JS Used Spring Integration and Apache Camel providing a simpler solution for the Integration problems. Developed Application to asses JSON and XMl from Restful web service from consumer side using Angular.JS Developed applications using Java8 new features such as Lambda Expressions and Stream API’s. Involved in developing Thread Safe blocks for multithread access and distributed transaction management. Created and injected Spring services, controllers and DAOs to achieve dependency injection. All the functionality is implemented using Spring IO / Spring Boot and Hibernate ORM Implemented Micro services using Spring Boot and enabled discovery using Eureka server. Used Amazon Web Services (AWS) like EC2, S3, cloud watch and Elastic Bean Stalk for code deployment. Configured AWS Identity and Access Management (IAM) Groups and Users for improved login authentication. Developed API for using AWS Lambda to manage the servers and run the code in the AWS. Developed quality code adhering to Scala coding Standards and best practices. Developed Merge jobs inPythonto extract and load data into MySQL database Developed Applications using Rule Engines-JBoss Drools 4.x, Work flows, Human tasks to implement Business rules validations and provided Drools Dashboard for Business users. Extensively worked on Hibernate Cache, Query, Criteria and Transactions in secondary project. Worked on creation of custom Docker container images, tagging, pushing images, integration of Spring boot. Worked on Mongo DB Installation, Configuring, Monitoring and Designing Shared Environment. Used Selenium Framework to Play and Record tests for web applications and worked with Selenium 2.0 web drivers for handling multiple frames, multiple browser windows, popups, and alerts. Used SOAP UI, Postman, Rest Client, Spring Mock MVC, Spring 4Junit for testing the web services. Worked on messaging technologies Java Messaging Service (JMS), and preferably experience with Kafka. Implemented BPM processes using Synchronous and Asynchronous Webservices Used Maven as build and dependency management tool for creating EAR, WAR and JAR file to be deployed in application servers and integrated with SVN, Jenkins. Resolved bug in application by coordinated with team members to assure a positive outcome using JIRA. Used GIT and GITHUB as a repository for version control and branch management. Developed test cases and performed unit testing using JUnit. Used Eureka server to run and integrate spring boot applications and micro services in a Docker container Environment: J2EE,Java8, Spring Boot, Spring MVC, hibernate 4.3, HTML5, CSS3, JavaScript6, jQuery, ReactJS, AJAX, Bootstrap, SOA, JSON, Angular JS 2.0, Amazon Web Services, Maven, Mongo DB, Jenkins, Agile Methodology, Selenium, Git, Docker, JUnit, Oracle 11g, Sublime Text 3 and IntelliJ Confidential - St. Louis, MO Sr. Java/J2EE Full Stack Developer Responsibilities: Involved in various SDLC phases like requirement gathering, Design, Analysis and Code development. Multithreading was used to process data in chunks to improve performance. Followed the best practices in coding like removing unnecessary casting, using generics in Hash Map, caching, Collections like sort, comparator, list, set and Design patterns. Developed interactive web pages using HTML, CSS and JS and used Bootstrap for cross browser compatibility. Wrote code Web Services (JAX-WS) for external system via SOAP/HTTP call and to fetch data from web services via JSON response and updating the HTML pages. Implemented application using design patterns such as Session Facade, Adaptor, Bean Factory and Singleton. Developed spring based presentation layer, hibernate based DAO layer and integrated them using Spring Dependency injection, ORM and Web modules. Configured Hibernate objects as Spring Beans in the Spring Configuration File. Configured the Hibernate configuration files to persist the data to the Oracle 11g Database. Created connections to database using Hibernate Session Factory, using Hibernate APIs to retrieve and store images to the database with Hibernate transaction control. Developed the application using Spring Framework that leverages Model View Layer (MVC) architecture. Used Spring Batch as spring batch jobs can meet the requirements of reliability, robustness, and traceability, which are essential for automatic processing of large amount of data. Used Spring Security for Authorization like Method Level Authorization and URL Level Authorization. Used Spring Transaction for the degree of isolation to work with other transactions and to execute within a transaction scope to run that transaction and used to check out before timing out of the transaction. Utilized Spring Security with the halp of “Method Level Security” by using AOP (Aspect-Oriented Programming) and “URL Level Security” by using Servlet filters for web sockets. Used Web services (SOAP) for transmission of large blocks of data over HTTP. Created continuous integration builds using Ant Jenkins. And deployed on WebSphere app server. UsedXML Web Services using SOAPprotocol to transfer data from one application to other which is remote. Worked on Message Oriented Middleware implementation using JMS. Used JAX-B parser for marshaling and un-marshaling. Worked with Web Sphere Application Server as application server. Used version control repository SVN (Subversion by apache) and JIRA for issue tracking. Used Maven as a build tool and retrieved all the dependencies required for the application. Used SOAP UI for testing the web services, AppDynamics for application health and JMeter for stress testing. Used PL/SQL stored procedures for applications that needed to execute as part of a scheduling mechanisms. Used Log4j framework to log/track application. Environment: HTML, CSS, Bootstrap, AJAX, JavaScript, JSF 2.1, Angular JS, Spring Dependency Injection, Spring 3.x, Hibernate 3.x, SOAP UI, Maven, SVN, JIRA, XML, Web sphere, SOAP web service, Unix/Linux, Web Sphere Application Server, PL/SQL, Oracle 11g Confidential - West Des Moines, IA Sr. Java/J2EE Developer Responsibilities: Worked on the development and testing of the infotainment module using Agile (SCRUM) methodologies. Used display tag to render large volumes of data. Bean, HTML and Logic tags are used to avoid java expressions. Worked on RESTful APIs for HTTP requests between client and server. Developed Hibernate DAO and spring framework manager classes to retrieve and save data from the database. UsedHibernateDetached Criteria, HQL and written some SQL queries for data retrieving. Used Spring framework to achieve loose coupling between the layers thus moving towards Service Oriented Architecture (SOA) exposed throughRestfulServices. Created and injected springservices, controllers and DAOs to achieve dependency injection by wiring objects. Used SpringBatch to design a lightweight and comprehensive solution to develop batch applications. Developed REST Web Services clients to consume those Web Services as well other enterprise wide Web Services and also worked on sharing WSDL’s of web services to clients. Used XStream API to transfer data back and forth between Spring MVC and Ext JS. Used Spring MVC Transaction Management, Spring Batch Transactions, and Hibernate cache concepts. Developed and implemented Business Requirements using Spring MVC framework. Implemented cross-cutting concerns such as logging, authentication and system performance using Spring AOP. Created the User Interface screens using Spring MVC for logging into the system and performing various other operations on network elements and used View Resolver to map web pages. Worked on implementing custom monitoring system through Splunk into deployment processes. Implemented RESTful Web Services usingSpringMVC and JSON. Developed strategies and supported tools to create an efficient automated integration and release using Jenkins. Analyze and resolve conflicts related to merging of source code for GIT. Worked on Selenium Data Driven framework and integrating it with Maven Build Management Tool, TestNG Unit Testing tool and Jenkins Continuous Integration Tool . Environment: HTML, CSS, Bootstrap, AJAX, JavaScript, Angular JS, Spring Dependency Injection, Spring 3.x, Hibernate 3.x, Soap UI, Maven, SVN, JIRA, XML, Web sphere, SOAP web service, Unix/Linux, Web Sphere Application Server, PL/SQL, Oracle 11g Confidential, Chicago, IL Sr. Java/J2EE Developer Responsibilities: Involved in complete software development life cycle with object oriented approach of clients’ business process. Worked on designing and developing a complete service oriented system based on SOA principles and architecture in agile development environment. Employed Agile Model and best practices for software development. Developed the Servlets for processing the data on the server. Extensively worked on JPA as persistence layer, involving EJB3.0 annotations, synchronizing Data base tables through XML in a secondary project. Engaged in developing the UI by using HTML, JSF, JQuery, and JavaScript and in some places used AJAX to make calls to other services and Involved in developing the CSS sheets for the UI Components. Developed web based application using spring framework for MVC architecture. Setting up the basic project set-up from scratch of Spring-Hibernate App based on Design. Used Spring Framework AOP Module to implement logging in the application to know the application status. Used Spring DAO Module along with Struts Framework to deal with Database. Used SVN for version control. Worked on Junit for creating test cases for all the Business Rules and the application code. Called external vendor applications using Web Services for delivering notifications. Environment: HTML, JSF, JQuery, JavaScript, Servlets, JBoss, Spring 3.x, Hibernate 3.x, Spring MVC, SVN, SOA, Jax-Ws, Junit Confidential - Schaumburg, IL Sr. Java Developer Responsibilities: Identified the Business requirements and Involved in preparing System Requirements for the project. Extensively worked with CSS Background, CSS Layouts, CSS positioning, CSS text, CSS border, CSS margin, CSS padding, CSS table, Pseudo classes, Pseudo elements and CSS behaviors in CSS. Involved in writing application level code to interact with RESTful Web APIs and used Web Services like AJAX, JSON, XML and jQuery in the front-end development. Designed dynamic and multi-browser compatible pages using HTML, CSS, JQuery and JavaScript. Developed the application layer using HTML, CSS3, JavaScript, and JQuery. Used XML Http Request Object to provide asynchronous communication as part of AJAX implementation. Extensively used MVC, Factory, Delegate and Singleton design patterns. Used Spring Framework AOP Module to implement logging in the application to know the application status. Spring MVC Framework IOC design pattern is used to have relationships between application components. It is also used to separate the application configuration and dependency specification from actual application code. Provided installation, configuration & maintenance of pre-prod and production Cloud environments including services such as Tomcat, Apache, Jetty, MySQL, and Jira. Used Spring Framework for Dependency Injection and integrated it with the Struts Framework. Used the Struts Validation and Tiles Framework in the presentation layer. Implemented the application using Jakarta Struts Framework, which is based on MVC design pattern. Used SOAP for Web Services by exchanging XML data between applications over HTTP. Wrote Ant Scripts to automate the build and deploy process. Environment: Core Java/J2ee, Servlets, JSP, CSS, JDBC, Ajax, Spring AOP Module, Ant Scripts, JavaScript, Eclipse, UML, Rational Rose, WebSphere Application Server 7.0, CVS, Junit, Ant, Adobe Flex Confidential Sr. Java Software Developer Responsibilities: Developed rich user interface using JavaScript, JSTL, CSS, JQuery and JSP’s. Involved in the requirements gathering. Design, Development, Unit testing and Bug fixing Developed application using Struts, Spring and Hibernate. Developed custom tags for implementing logic in JSP’s. Used Java script, JQuery, JSTL, CSS and Struts 2 tags for developing the JSP’S. Used custom tags to display logic specific data in JSP'S. Involved in making release builds for deploying the application for test environments. Used Oracle database as backend database. Wrote SQL to update and create database tables. Used Eclipse as IDE. Used SpringIOC for injecting the beans. Used Hibernate for connecting to the database and mapping the entities by using hibernate annotations. Created JUnit test cases for unit testing application. Used JUNIT and JMOCK for unit testing. Environment: J2EE, Java, Struts, Tiles, JSP, JNDI, Clear Case, SOAP, WSDL, UDDI, JAXB, JAXP, XML Schema, (XST)EJB 2.0, ANT, JavaScript, JMS, Rational Rose, WSAD, DB2 