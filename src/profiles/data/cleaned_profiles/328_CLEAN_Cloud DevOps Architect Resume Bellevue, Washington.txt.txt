SUMMARY Over 8 years of experience as Systems Engineer, DevOps Engineer, Cloud Engineer, DevOps Architect in the areas of Software Configuration Management (SCM), Build/Release Management, CI/CD (Continuous Integration/Continuous Delivery) and deployment. Experienced in all phases of the software development life - cycle (SDLC) with specific focus on the build and release of quality software. Experienced in Waterfall, Agile/Scrum, Lean and most recently Continuous Integration (CI) and Continuous Deployment (CD) practices. Created SCM Process, policies and procedures which are followed by Development and SQA teams to Release or Deploy highest quality product for the enterprise. Experience in using CVS, Subversion, VTFS, Perforce, GIT, Gradle and Rational Clear Case on Unix and Windows environment. Supported provisioning by creating and configuring virtual development environments Experienced with Handling Cloud environments (AWS and OpenStack) Managed Amazon Web Services like EC2, S3 bucket, RDS, EBS, ELB, Auto-Scaling, AMI, IAM through AWS Console and API Integration with Puppet Code. Worked with Chef Enterprise Hosted as well as On-Premise, Installed Workstation, Bootstrapped Nodes, Wrote Recipes and Cookbooks and uploaded them to Chef-server, Managed On-site OS/Applications/Services/Packages using Chef as well as AWS for EC2/S3/Route53 & ELB with Chef Cookbooks. Extensive experience in using Continuous Integration tools like Cruise Control, Build Forge, and Hudson. Experience in using Build Automation tools and Continuous Integration concepts by using tools like ANT, Jenkins, Team city, Quick Build, Build forge and Maven. Developed Puppet modules to automate application installation and configuration management Installed, configured and administered Continuous Integration tools such as Hudson and Jenkins for automated builds. Experience in using Confidential and Artifactory Repository Managers for Maven and Ant builds. Good experience on container management tool Docker. Experience in administering and configuring Confidential Repository Manager Ability to build deployment, build scripts and automated solutions using shell scripting Experience in using monitoring tool like Nagios Experienced in branching, tagging and maintaining the version across the environments using SCM tools like GIT, Subversion (SVN) and TFS on Linux and windows platforms. Extensive experience in configuration management and release engineering in multiple projects and multiple-branches environment. Experience as a Project Administrator for the Branching, Merging, and Access allocation to Users. Experience with UNIX and shell Scripting. Experience in Atlassian Products like Confluence, Jira, Crucible, Bitbucket. Extensive experience in defining the branching and the merging strategies, creating baselines and releasing the code. Worked with different bug tracking tools like JIRA Atlassian Management Tool and Bugzila. Created CM Plans and Test Plans for Applications. Experienced in trouble shooting, configuring and deploying enterprise applications in JBoss and Tomcat as well. In-depth technical strengths and business understanding for full-cycle project and post-implementation problem-solving requirements. Implemented Release schedules, communicated the Release status, created Roll out Plans, tracked the Project Milestones, prepared the reports and chaired the Release calls and worked for a successful Release. PROFESSIONAL EXPERIENCE Confidential, Bellevue, Washington Cloud DevOps Architect Responsibilities: Documented and uploaded various best practices, how to do procedures and project related work in Confluence and linked them with the related JIRA tasks. Responsible for Design of different Release Environments for Projects. Created and maintained continuous integration (CI) using tools Jenkins/Maven over different environments to facilitate an agile development process which is automated and repeatable enabling teams to safely deploy code many times a day while ensuring operational best practices are supported. Successfully created stacks for creating few services through CloudFormation templates. Created multiple Windows Server EC2 instances with supporting ELB and Autoscaling etc by writing CloudFormation Templates. Created and Managed API through AWS API Gateway. Created Docker images using a Docker file, worked on Docker container snapshots, removing images and managing Docker volumes. Designed and implemented for fully automated server build management, monitoring and deployment using Chef. Installed Chef Server Enterprise On-Premise/WorkStation/Bootstrapped the Nodes using Knife. Developed Chef Cookbooks and Recipes to manage systems configuration. Configured, monitored, distributed multi-platform servers using Chef. Used Test Kitchen to test the Chef Recipes on workstations before running the recipe on servers. Expertise in delivering those docker container to the clients for their deployment. Created Python Scripts to Automate AWS services, include web servers, ELB, CloudFront Distribution, database, EC2 and database security groups, S3 bucket and application configuration, this Script creates stacks, single servers or joins web servers to stacks. Configured Docker container for branching purposes and Implemented Docker automation solution for Continuous Integration / Continuous Delivery model. Configured and administered Jenkins pipelines for automated builds and responsible for installing Jenkins master and slave nodes. Deployed and orchestrated applications using Kubernetes. Monitored and Managed Access Controls of users in AWS through IAM (Identity and Access Management). Worked with Red Hat OpenShift Container Platform for Docker and Kubernetes. Used Kubernetes to manage containerized applications using its nodes, Config Maps, selector, Services and deployed application containers as Pods. Managed Access controls for S3 storage Bucket through logging and lifecycle policies. Managed AWS infrastructure and automation with CLI and API. Worked on Inbound and Outbound services with automation of Chef. Involved in supporting cloud instances running Linux and Windows on AWS, experience with Elastic IP, Security Groups and Virtual Private Cloud in AWS. Extensive experience in configuring Amazon EC2, Amazon S3, AWS API Gateway, Amazon Elastic Load Balancing, IAM and Security Groups in Public and Private Subnets in VPC and other services in the AWS. Experience in Python programming for deployment of Java applications and implementation and automation of Shell scripts for release and build automation. Used JIRA as defect tracking system and configure various workflows, customizations, and plugins for Jira bug/issue tracker, Jenkins with Jira, GitHub. Used S3 for simple storage service, moved files and used Snowball service for as part of the migration. Worked on creating and implementing application monitoring, and logging strategies using New Relic, Logstash, Elasticsearch, and Kibana. Environment: Amazon Web Services (IAM, S3, EC2, VPC, CloudWatch, Autoscaling, CloudFormation etc.), Git, Chef, Jenkins, Docker Container, Kubernetes, Windows Server, Agile, TeamCity, Octopus, Json, Bash, Shell, Pytho Confidential AWS DevOps Engineer Responsibilities: Good knowledge in CI (Continuous Integration) and CD (Continuous Delivery) methodologies Involved in designing and deploying applications utilizing almost all the AWS stack (Including EC2, VPC, ECS, Code Deploy, Route53, S3, Dynamo DB, SNS, SQS, Redis, Cloud watch, Beanstalk, Lambda, Certification Manger and IAM) focusing on high-availability, fault tolerance, and auto-scaling in AWS Cloud Formation. Developed Terraform templates to create load balancers (ELB), Ec2 instances with auto scaling, monitoring on the fly for different environments such as QA, SIT, Stage which run on different VPCs. Ability to build deployment, build scripts and automated solutions using scripting languages such as Shell scripting and Python. Implemented Blue/Green Deployment for STG & PRD switching weights to route traffic (route53). Worked on Disaster Recovery strategies & dependencies copying AMI's across AWS regions. Design, planning and migration of on premise applications/Jenkins into AWS Used supervisor as client/server system to monitor and control process on Unix machine. Implemented a Continuous Delivery pipeline with Jenkins and GitHub and AWS AMI's, when a new GitHub branch gets commit, Jenkins, our Continuous Integration server, automatically attempts to build Jenkins Promotion (AWS CLI), to launch stack and deploy. Used grunt, gulp and webpack as a build tools on NodeJS projects for the development of build artifacts. Managed servers on the Amazon Web Services (AWS) platform instancesusing Chef Configuration management. Wrote/ModifiedChef Cookbooks/Recipes for Bootstrapping provisioning instances to standardize the ENV setup. Worked on AWS ECS services creating services using CloudFormation templates and deployedDockerimagefrom private container-registry(quay). Extensively worked on Jenkins andCloudBees by installing, configuring and maintaining for continuous integration (CI) and for End to End automation for all build and deployments. Built and Deployed Java/J2EE to a web application server in an Agile continuous integration environment and automated the whole process Involved in editing the existing MAVEN (pom.xml) files in case of errors or changes in the project requirements. Provided on-call supports in deployments to PRODUCTION Environment. Launching Amazon EC2 Cloud Instances using Amazon Web Services (Linux/ Ubuntu/RHEL) and Configuring launched instances with respect to specific applications. Performed S3 buckets creation,policiesand on the IAM role based polices and customizing the JSON template. Developed shell scripts to automate the deployments, using AWS CLI tool to auto deployments using AWSCodeDeploy service. Working with GitHub private repositories and plugin it to Jenkins. Experience working on cloudformation Scripts(json& YAML) to Launch stacks ready for DEV, STG with Git commit and used existing stacks resource references (security group up, subnets, VPC) with conditional parameters. Environment: AWS, EC2, Elastic Load Balancer, S3, RDS, Ansible, Elastic Beanstalk (EBS), VPC, Chef, GIT, Jenkins, Maven, Linux, ANT, Red Hat Linux, DOCKER. SWARM. Confidential DevOps Engineer Responsibilities: Implemented multiple CI/CD pipelines as part of DevOps role for on-premises and cloud-based software using Jenkins, Ansible and AWS Strengthening security by implementing and maintaining Network Address Translation in company's network. Worked on version control tools like GIT and Perforce and integrated build process with Jenkins. Converted CVS and Visual Source Safe repositories to Perforce. Created a functional test environment in AWS where the functional tests will run on the EC2 instances dynamically. Creating the Automated Build and deployment process for application, re-engineering Setup for better user experience, and leading up to building a continuous integration system. Provided SME in all areas of Cloud (IaaS, PaaS, SaaS) to existing and perspective clients on multiple cloud platforms Azure/AWS and various PaaS platforms (Cloud Foundry/OpenShift). Worked on writing the playbooks for Ansible and deploying applications using Ansible. Set up CI (Continuous Integration) for major releases in Jenkins and Bamboo. Used Jenkins innovatively to automate most of the build related tasks. Improved throughput and efficiency of build system by providing EO/managers rights to trigger required build. Analyzed Ansible Nginx playbooks to determine how to migrate them to Chef + Ruby. Configured Ansible to manage AWS environments and automate the build process for core AMIs used by all application deployments including Autoscaling. Involved in migration of Java applications to OpenShift Enterprise. Wrote the Ansible playbooks which is the entry point for Ansible provisioning, where the automation is defined through tasks using YAML format. Run Ansible Scripts to provision Dev servers. Environment: AWS, EC2, Elastic Load Balancer, S3, RDS, Ansible, Elastic Beanstalk (EBS), VPC, Chef, GIT, Jenkins, Maven, Linux, ANT, Red Hat Linux Confidential Build and Release Engineer Responsibilities: Enabling customers to better manage software development, deployments and infrastructure with tools such as Ansible, Jenkins, Maven, SVN and Git. Created branches, performed merges in version control systems GIT and SVN. Managed Git and SVN repositories for branching, merging, and tagging. Management, Planning, Implementation and Security of Network & Server / Linux Services. Responsible for taking the source code and compiling using Maven and package it in its distributable format, such as a Jar, War and Ear. Setup Jenkins tool to integrate the Java project and maintained Jenkins with continuous integration and deployment. Automate the build Process Using Jenkins jobs. Troubleshooting application related issues by log verification. Involved in Building data backup/recovery strategy and plans. Designed testing framework to support REST based web services API, User Interface, and database code to be tested for regression as the code is deployed in each environment. Implemented Infrastructure automation through Puppet, for auto provisioning, code deployments, software installation and configuration updates. Responsible for automated deployment of application in Tomcat Server using Ansible playbooks. Involved in deploying the content cloud platform on Amazon AWS using EC2, S3, and EBS. Evaluate Ansible Playbooks and roles to automate the cloud deployment and operations. Automated setting up server infrastructure for the DevOps services, using Puppet/Ansible. Taking weekly back-ups like Jenkins home directory. Working experience in monitoring the services by using Nagios Environment: Linux, Ansible, Jenkins, Tomcat, Maven, SVN, Git, AWS, EC2, S3, EBS, Puppet, Nagios. Confidential Linux System Engineer Responsibilities: Coordinating and completing build automation for the project with the most advanced build features. Provided 24/7 Support for Production deployments. Responsible for creating and deploying builds on various Web logic environments, testing in build environment and release to test team on scheduled time. Utilized ANT for build automation to compile the source code into production. Ensured the final release/install package of software, applications and system changes has met all quality control, user acceptance and business validation criteria. Created and maintained build automation shell, manage building fixes, merges, release cuts as needed, written scripts for environment changes in Perl and Python for Web-sphere mapping modules to the enterprise application. Handling complete Build and Release process including code, documentation and supporting testing team along with the server Administration Work with QA to facilitate verification of releases and deployed multiple builds at a time. Assist clients for application code migrations and Environment related issues. Ensure servers and environments are available for developments and testing validation is meeting the expectation. Make sure the configuration, version and systems are working fine. Assist Clients and team mates to understand issues and help/coordinate with multiple teams to resolve issues and make the environment stable. Environment: Linux, ANT, Maven, Jenkins, Tomcat, Perl, Python, Web-sphere, Web logic Confidential Linux Engineer Responsibilities: Installed new/rebuild existing servers and configured hardware, services, settings, directories etc., in accordance with baseline and operational requirements. Applying visualization technology in managing multiple operating systems on VMware platforms as well as Windows Hyper -V Manager. Created, managed user accounts on Unix/Linux servers, reset user passwords. Administered users account security through monitoring login logs for repeated failed authentication attempts. Installed and configured security systems such as AIDE in accordance with company operational procedures as well as monitoring the system to identify possible intrusion. Installed and configures oracle Web-logic to enhance mainframe applications in multi-user computer environment. After build the code use Beanstalk for deployment Perform daily system monitoring, daily reviewing of system and application logs while verifying successful completion of scheduled jobs. Environment: Linux, Unix Shell Scripting, Bash, Oracle Web-logic, VMware, Hyper -V Manager, AIDE. 